// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: shar-workflow/models.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ThreadingType int32

const (
	ThreadingType_Sequential ThreadingType = 0
	ThreadingType_Parallel   ThreadingType = 2
)

// Enum value maps for ThreadingType.
var (
	ThreadingType_name = map[int32]string{
		0: "Sequential",
		2: "Parallel",
	}
	ThreadingType_value = map[string]int32{
		"Sequential": 0,
		"Parallel":   2,
	}
)

func (x ThreadingType) Enum() *ThreadingType {
	p := new(ThreadingType)
	*p = x
	return p
}

func (x ThreadingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThreadingType) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[0].Descriptor()
}

func (ThreadingType) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[0]
}

func (x ThreadingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThreadingType.Descriptor instead.
func (ThreadingType) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{0}
}

type GatewayType int32

const (
	GatewayType_exclusive GatewayType = 0 // Exclusive - When splitting, it routes the sequence flow to exactly one of the outgoing branches. When merging, it awaits one incoming branch to complete before triggering the outgoing flow.
	GatewayType_inclusive GatewayType = 1 // Inclusive - When splitting, one or more branches are activated. All active incoming branches must complete before merging.
	GatewayType_parallel  GatewayType = 2 // Parralel - When used to split the sequence flow, all outgoing branches are activated simultaneously. When merging parallel branches it waits for all incoming branches to complete before triggering the outgoing flow.
)

// Enum value maps for GatewayType.
var (
	GatewayType_name = map[int32]string{
		0: "exclusive",
		1: "inclusive",
		2: "parallel",
	}
	GatewayType_value = map[string]int32{
		"exclusive": 0,
		"inclusive": 1,
		"parallel":  2,
	}
)

func (x GatewayType) Enum() *GatewayType {
	p := new(GatewayType)
	*p = x
	return p
}

func (x GatewayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GatewayType) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[1].Descriptor()
}

func (GatewayType) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[1]
}

func (x GatewayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GatewayType.Descriptor instead.
func (GatewayType) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{1}
}

type GatewayDirection int32

const (
	GatewayDirection_divergent  GatewayDirection = 0
	GatewayDirection_convergent GatewayDirection = 1
)

// Enum value maps for GatewayDirection.
var (
	GatewayDirection_name = map[int32]string{
		0: "divergent",
		1: "convergent",
	}
	GatewayDirection_value = map[string]int32{
		"divergent":  0,
		"convergent": 1,
	}
)

func (x GatewayDirection) Enum() *GatewayDirection {
	p := new(GatewayDirection)
	*p = x
	return p
}

func (x GatewayDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GatewayDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[2].Descriptor()
}

func (GatewayDirection) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[2]
}

func (x GatewayDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GatewayDirection.Descriptor instead.
func (GatewayDirection) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{2}
}

type ProcessHistoryType int32

const (
	ProcessHistoryType_processExecute   ProcessHistoryType = 0
	ProcessHistoryType_activityExecute  ProcessHistoryType = 1
	ProcessHistoryType_activityComplete ProcessHistoryType = 2
	ProcessHistoryType_processSpawnSync ProcessHistoryType = 3
	ProcessHistoryType_processComplete  ProcessHistoryType = 4
	ProcessHistoryType_processAbort     ProcessHistoryType = 5
	ProcessHistoryType_activityAbort    ProcessHistoryType = 6
)

// Enum value maps for ProcessHistoryType.
var (
	ProcessHistoryType_name = map[int32]string{
		0: "processExecute",
		1: "activityExecute",
		2: "activityComplete",
		3: "processSpawnSync",
		4: "processComplete",
		5: "processAbort",
		6: "activityAbort",
	}
	ProcessHistoryType_value = map[string]int32{
		"processExecute":   0,
		"activityExecute":  1,
		"activityComplete": 2,
		"processSpawnSync": 3,
		"processComplete":  4,
		"processAbort":     5,
		"activityAbort":    6,
	}
)

func (x ProcessHistoryType) Enum() *ProcessHistoryType {
	p := new(ProcessHistoryType)
	*p = x
	return p
}

func (x ProcessHistoryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessHistoryType) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[3].Descriptor()
}

func (ProcessHistoryType) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[3]
}

func (x ProcessHistoryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessHistoryType.Descriptor instead.
func (ProcessHistoryType) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{3}
}

// WorkflowTimerType describes whether a timer is relative or absolute
type WorkflowTimerType int32

const (
	WorkflowTimerType_duration WorkflowTimerType = 0 // Duration - a relative timer
	WorkflowTimerType_fixed    WorkflowTimerType = 1 // Fixed - an absolute timer
)

// Enum value maps for WorkflowTimerType.
var (
	WorkflowTimerType_name = map[int32]string{
		0: "duration",
		1: "fixed",
	}
	WorkflowTimerType_value = map[string]int32{
		"duration": 0,
		"fixed":    1,
	}
)

func (x WorkflowTimerType) Enum() *WorkflowTimerType {
	p := new(WorkflowTimerType)
	*p = x
	return p
}

func (x WorkflowTimerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowTimerType) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[4].Descriptor()
}

func (WorkflowTimerType) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[4]
}

func (x WorkflowTimerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowTimerType.Descriptor instead.
func (WorkflowTimerType) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{4}
}

type RecipientType int32

const (
	RecipientType_job RecipientType = 0
)

// Enum value maps for RecipientType.
var (
	RecipientType_name = map[int32]string{
		0: "job",
	}
	RecipientType_value = map[string]int32{
		"job": 0,
	}
)

func (x RecipientType) Enum() *RecipientType {
	p := new(RecipientType)
	*p = x
	return p
}

func (x RecipientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecipientType) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[5].Descriptor()
}

func (RecipientType) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[5]
}

func (x RecipientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecipientType.Descriptor instead.
func (RecipientType) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{5}
}

type CancellationState int32

const (
	CancellationState_executing  CancellationState = 0 // CancellationState_executing - the state machine is executing
	CancellationState_completed  CancellationState = 1 // CancellationState_completed - the state machine has completed successfully
	CancellationState_terminated CancellationState = 2 // CancellationState_terminated - the state machine instance was terminated
	CancellationState_errored    CancellationState = 3 // CancellationState_errored - an error occured during state machine execution
	CancellationState_obsolete   CancellationState = 4 // CancellationState_obsolete - this state is obsolete due to an alternate flow
)

// Enum value maps for CancellationState.
var (
	CancellationState_name = map[int32]string{
		0: "executing",
		1: "completed",
		2: "terminated",
		3: "errored",
		4: "obsolete",
	}
	CancellationState_value = map[string]int32{
		"executing":  0,
		"completed":  1,
		"terminated": 2,
		"errored":    3,
		"obsolete":   4,
	}
)

func (x CancellationState) Enum() *CancellationState {
	p := new(CancellationState)
	*p = x
	return p
}

func (x CancellationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancellationState) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[6].Descriptor()
}

func (CancellationState) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[6]
}

func (x CancellationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancellationState.Descriptor instead.
func (CancellationState) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{6}
}

type LogSource int32

const (
	LogSource_logSourceEngine   LogSource = 0
	LogSource_logSourceWorkflow LogSource = 2
	LogSource_logSourceClient   LogSource = 3
	LogSource_logSourceJob      LogSource = 4
)

// Enum value maps for LogSource.
var (
	LogSource_name = map[int32]string{
		0: "logSourceEngine",
		2: "logSourceWorkflow",
		3: "logSourceClient",
		4: "logSourceJob",
	}
	LogSource_value = map[string]int32{
		"logSourceEngine":   0,
		"logSourceWorkflow": 2,
		"logSourceClient":   3,
		"logSourceJob":      4,
	}
)

func (x LogSource) Enum() *LogSource {
	p := new(LogSource)
	*p = x
	return p
}

func (x LogSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogSource) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[7].Descriptor()
}

func (LogSource) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[7]
}

func (x LogSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogSource.Descriptor instead.
func (LogSource) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{7}
}

type RetryStrategy int32

const (
	RetryStrategy_Linear      RetryStrategy = 0 // Retry at regular intervals.
	RetryStrategy_Incremental RetryStrategy = 1 // Retry at increasingly large intervals.
)

// Enum value maps for RetryStrategy.
var (
	RetryStrategy_name = map[int32]string{
		0: "Linear",
		1: "Incremental",
	}
	RetryStrategy_value = map[string]int32{
		"Linear":      0,
		"Incremental": 1,
	}
)

func (x RetryStrategy) Enum() *RetryStrategy {
	p := new(RetryStrategy)
	*p = x
	return p
}

func (x RetryStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetryStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[8].Descriptor()
}

func (RetryStrategy) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[8]
}

func (x RetryStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetryStrategy.Descriptor instead.
func (RetryStrategy) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{8}
}

type RetryErrorAction int32

const (
	RetryErrorAction_PauseWorkflow      RetryErrorAction = 0 // PauseWorkflow - exhausting retries will pause the workflow and send a shar operational message.
	RetryErrorAction_ThrowWorkflowError RetryErrorAction = 1 // ThrowWorkflowError - throw a workflow error.
	RetryErrorAction_SetVariableValue   RetryErrorAction = 2 // SetVariableValue - set a workflow variable value.
	RetryErrorAction_FailWorkflow       RetryErrorAction = 3 // FailWorkflow - exhausting retries will fail the workflow.
)

// Enum value maps for RetryErrorAction.
var (
	RetryErrorAction_name = map[int32]string{
		0: "PauseWorkflow",
		1: "ThrowWorkflowError",
		2: "SetVariableValue",
		3: "FailWorkflow",
	}
	RetryErrorAction_value = map[string]int32{
		"PauseWorkflow":      0,
		"ThrowWorkflowError": 1,
		"SetVariableValue":   2,
		"FailWorkflow":       3,
	}
)

func (x RetryErrorAction) Enum() *RetryErrorAction {
	p := new(RetryErrorAction)
	*p = x
	return p
}

func (x RetryErrorAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetryErrorAction) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[9].Descriptor()
}

func (RetryErrorAction) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[9]
}

func (x RetryErrorAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetryErrorAction.Descriptor instead.
func (RetryErrorAction) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{9}
}

// Workflow describes a number of processes that interact together.  It also contains all messages and errors used by the processes.
type Workflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                               // Name defines the common name that describes the workflow.
	Process       map[string]*Process `protobuf:"bytes,2,rep,name=process,proto3" json:"process,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Process is a map of process names to workflow state machines.
	Messages      []*Element          `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`                                                                                       // Messages define the messages that can be sent by the workflow.
	Errors        []*Error            `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`                                                                                           // Errors define the errors used by the workflow.
	GzipSource    []byte              `protobuf:"bytes,5,opt,name=gzipSource,proto3" json:"gzipSource,omitempty"`                                                                                   // Source for round tripping.
	Collaboration *Collaboration      `protobuf:"bytes,6,opt,name=collaboration,proto3" json:"collaboration,omitempty"`                                                                             // Collaboration between processes.
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{0}
}

func (x *Workflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workflow) GetProcess() map[string]*Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *Workflow) GetMessages() []*Element {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Workflow) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *Workflow) GetGzipSource() []byte {
	if x != nil {
		return x.GzipSource
	}
	return nil
}

func (x *Workflow) GetCollaboration() *Collaboration {
	if x != nil {
		return x.Collaboration
	}
	return nil
}

type Collaboration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participant []*Participant `protobuf:"bytes,1,rep,name=participant,proto3" json:"participant,omitempty"` // Participant in a collaboration.
	MessageFlow []*MessageFlow `protobuf:"bytes,2,rep,name=messageFlow,proto3" json:"messageFlow,omitempty"` // MessageFlow describes the collaboration message participants.
}

func (x *Collaboration) Reset() {
	*x = Collaboration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collaboration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collaboration) ProtoMessage() {}

func (x *Collaboration) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collaboration.ProtoReflect.Descriptor instead.
func (*Collaboration) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{1}
}

func (x *Collaboration) GetParticipant() []*Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *Collaboration) GetMessageFlow() []*MessageFlow {
	if x != nil {
		return x.MessageFlow
	}
	return nil
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`               // Id - participation ID.
	ProcessId string `protobuf:"bytes,1,opt,name=processId,proto3" json:"processId,omitempty"` // ProcessId of the participating process.
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{2}
}

func (x *Participant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Participant) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

type MessageFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`               // Id for the message flow.
	Sender    string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`       // Source of the message.
	Recipient string `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"` // Recipient of the message.
}

func (x *MessageFlow) Reset() {
	*x = MessageFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFlow) ProtoMessage() {}

func (x *MessageFlow) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageFlow.ProtoReflect.Descriptor instead.
func (*MessageFlow) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{3}
}

func (x *MessageFlow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageFlow) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MessageFlow) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimedStart bool `protobuf:"varint,1,opt,name=timedStart,proto3" json:"timedStart,omitempty"` // Workflow contains timed start activities that can trigger a process.
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{4}
}

func (x *Metadata) GetTimedStart() bool {
	if x != nil {
		return x.TimedStart
	}
	return false
}

// Process describes a single workflow state machine.
type Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*Element `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`       // Elements describes each state in the state machine.
	Name     string     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`               // Name - the common name of the state machine.
	Metadata *Metadata  `protobuf:"bytes,6,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"` // Metadata created by SHAR to describe process behavior.
}

func (x *Process) Reset() {
	*x = Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{5}
}

func (x *Process) GetElements() []*Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *Process) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Process) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// WorkflowVersions describes the version history.
type WorkflowVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version []*WorkflowVersion `protobuf:"bytes,1,rep,name=version,proto3" json:"version,omitempty"` // WorkflowVersion - a single version of a workflow
}

func (x *WorkflowVersions) Reset() {
	*x = WorkflowVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowVersions) ProtoMessage() {}

func (x *WorkflowVersions) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowVersions.ProtoReflect.Descriptor instead.
func (*WorkflowVersions) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowVersions) GetVersion() []*WorkflowVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

// WorkflowVersion contains the metadata for a single workflow version
type WorkflowVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`          // Id - the launchable ID for the workflow.
	Sha256 []byte `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`  // Sha256 - the hash of the workflow configuration.
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"` // Number - the version number of the workflow
}

func (x *WorkflowVersion) Reset() {
	*x = WorkflowVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowVersion) ProtoMessage() {}

func (x *WorkflowVersion) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowVersion.ProtoReflect.Descriptor instead.
func (*WorkflowVersion) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{7}
}

func (x *WorkflowVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowVersion) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

func (x *WorkflowVersion) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

// Element describes a single state machine state.
type Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                                    // Id - the unique identifier for the workflow state machine element.
	Name            string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                                                // Name - the name of the state machine element.
	Type            string                   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                                                                                                                // Type - the type of state machine element
	Documentation   string                   `protobuf:"bytes,4,opt,name=documentation,proto3" json:"documentation,omitempty"`                                                                                              // Documentation - any documentation describing the state machine element.
	Execute         string                   `protobuf:"bytes,5,opt,name=execute,proto3" json:"execute,omitempty"`                                                                                                          // Execute - describes the execution parameter,  This is used for diffrerent purposes depending on the type.
	Outbound        *Targets                 `protobuf:"bytes,6,opt,name=outbound,proto3" json:"outbound,omitempty"`                                                                                                        // Outbound - a number of possible transitions to other state machine state elements.s
	Process         *Process                 `protobuf:"bytes,7,opt,name=process,proto3" json:"process,omitempty"`                                                                                                          // Process - defines any subprocesses contained within this state machine.
	Msg             string                   `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`                                                                                                                  // TODO: Document
	Candidates      string                   `protobuf:"bytes,10,opt,name=candidates,proto3" json:"candidates,omitempty"`                                                                                                   // Candidates - used for user related state machgine types to define users that may complete the task.
	CandidateGroups string                   `protobuf:"bytes,11,opt,name=candidateGroups,proto3" json:"candidateGroups,omitempty"`                                                                                         // CandidateGroups - used for user related state machine types to define groups that may complete a task.
	Errors          []*CatchError            `protobuf:"bytes,12,rep,name=errors,proto3" json:"errors,omitempty"`                                                                                                           // Errors - a number of catchable errors for this state machine element.
	Error           *Error                   `protobuf:"bytes,13,opt,name=error,proto3" json:"error,omitempty"`                                                                                                             // Error - an error that may be thrown.
	InputTransform  map[string]string        `protobuf:"bytes,14,rep,name=inputTransform,proto3" json:"inputTransform,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`   // InputTransform - a transformation to poerform between variable names when calling a state machine task.
	OutputTransform map[string]string        `protobuf:"bytes,15,rep,name=outputTransform,proto3" json:"outputTransform,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // OutputTransform - a transformation to poerform between variable names when exiting a state machine task.
	Timer           *WorkflowTimerDefinition `protobuf:"bytes,16,opt,name=timer,proto3" json:"timer,omitempty"`                                                                                                             // Timer - a time to wait before execution for timer tasks.
	BoundaryTimer   []*Timer                 `protobuf:"bytes,17,rep,name=boundaryTimer,proto3" json:"boundaryTimer,omitempty"`                                                                                             // BoundaryTimer - a number of timed transitions between this and another state.
	Gateway         *GatewaySpec             `protobuf:"bytes,18,opt,name=gateway,proto3,oneof" json:"gateway,omitempty"`                                                                                                   // GatewaySpec - if this element is a gateway, this contains the type specification for it.
	Iteration       *Iteration               `protobuf:"bytes,19,opt,name=iteration,proto3,oneof" json:"iteration,omitempty"`                                                                                               // Iteration - gives any instructions for multi instance execution.
	Version         *string                  `protobuf:"bytes,20,opt,name=version,proto3,oneof" json:"version,omitempty"`                                                                                                   // Version - provides version information about a resource such as a task.
	RetryBehaviour  *DefaultTaskRetry        `protobuf:"bytes,21,opt,name=retryBehaviour,proto3,oneof" json:"retryBehaviour,omitempty"`                                                                                     // RetryBehaviour - the style and type of retry associated with a service task.
}

func (x *Element) Reset() {
	*x = Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element) ProtoMessage() {}

func (x *Element) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element.ProtoReflect.Descriptor instead.
func (*Element) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{8}
}

func (x *Element) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Element) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Element) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Element) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

func (x *Element) GetExecute() string {
	if x != nil {
		return x.Execute
	}
	return ""
}

func (x *Element) GetOutbound() *Targets {
	if x != nil {
		return x.Outbound
	}
	return nil
}

func (x *Element) GetProcess() *Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *Element) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Element) GetCandidates() string {
	if x != nil {
		return x.Candidates
	}
	return ""
}

func (x *Element) GetCandidateGroups() string {
	if x != nil {
		return x.CandidateGroups
	}
	return ""
}

func (x *Element) GetErrors() []*CatchError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *Element) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Element) GetInputTransform() map[string]string {
	if x != nil {
		return x.InputTransform
	}
	return nil
}

func (x *Element) GetOutputTransform() map[string]string {
	if x != nil {
		return x.OutputTransform
	}
	return nil
}

func (x *Element) GetTimer() *WorkflowTimerDefinition {
	if x != nil {
		return x.Timer
	}
	return nil
}

func (x *Element) GetBoundaryTimer() []*Timer {
	if x != nil {
		return x.BoundaryTimer
	}
	return nil
}

func (x *Element) GetGateway() *GatewaySpec {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *Element) GetIteration() *Iteration {
	if x != nil {
		return x.Iteration
	}
	return nil
}

func (x *Element) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *Element) GetRetryBehaviour() *DefaultTaskRetry {
	if x != nil {
		return x.RetryBehaviour
	}
	return nil
}

type Iteration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection  string        `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Iterator    string        `protobuf:"bytes,2,opt,name=iterator,proto3" json:"iterator,omitempty"`
	CollateAs   string        `protobuf:"bytes,3,opt,name=collateAs,proto3" json:"collateAs,omitempty"`
	CollateFrom string        `protobuf:"bytes,4,opt,name=collateFrom,proto3" json:"collateFrom,omitempty"`
	Until       *string       `protobuf:"bytes,5,opt,name=until,proto3,oneof" json:"until,omitempty"`
	Execute     ThreadingType `protobuf:"varint,6,opt,name=execute,proto3,enum=ThreadingType" json:"execute,omitempty"`
}

func (x *Iteration) Reset() {
	*x = Iteration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Iteration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Iteration) ProtoMessage() {}

func (x *Iteration) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Iteration.ProtoReflect.Descriptor instead.
func (*Iteration) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{9}
}

func (x *Iteration) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *Iteration) GetIterator() string {
	if x != nil {
		return x.Iterator
	}
	return ""
}

func (x *Iteration) GetCollateAs() string {
	if x != nil {
		return x.CollateAs
	}
	return ""
}

func (x *Iteration) GetCollateFrom() string {
	if x != nil {
		return x.CollateFrom
	}
	return ""
}

func (x *Iteration) GetUntil() string {
	if x != nil && x.Until != nil {
		return *x.Until
	}
	return ""
}

func (x *Iteration) GetExecute() ThreadingType {
	if x != nil {
		return x.Execute
	}
	return ThreadingType_Sequential
}

type Iterator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value    [][]byte `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	Collated [][]byte `protobuf:"bytes,3,rep,name=collated,proto3" json:"collated,omitempty"`
}

func (x *Iterator) Reset() {
	*x = Iterator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Iterator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Iterator) ProtoMessage() {}

func (x *Iterator) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Iterator.ProtoReflect.Descriptor instead.
func (*Iterator) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{10}
}

func (x *Iterator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Iterator) GetValue() [][]byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Iterator) GetCollated() [][]byte {
	if x != nil {
		return x.Collated
	}
	return nil
}

type GatewaySpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              GatewayType      `protobuf:"varint,1,opt,name=type,proto3,enum=GatewayType" json:"type,omitempty"`
	Direction         GatewayDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=GatewayDirection" json:"direction,omitempty"`
	ReciprocalId      string           `protobuf:"bytes,3,opt,name=reciprocalId,proto3" json:"reciprocalId,omitempty"`
	FixedExpectations []string         `protobuf:"bytes,4,rep,name=fixedExpectations,proto3" json:"fixedExpectations,omitempty"`
}

func (x *GatewaySpec) Reset() {
	*x = GatewaySpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewaySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewaySpec) ProtoMessage() {}

func (x *GatewaySpec) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewaySpec.ProtoReflect.Descriptor instead.
func (*GatewaySpec) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{11}
}

func (x *GatewaySpec) GetType() GatewayType {
	if x != nil {
		return x.Type
	}
	return GatewayType_exclusive
}

func (x *GatewaySpec) GetDirection() GatewayDirection {
	if x != nil {
		return x.Direction
	}
	return GatewayDirection_divergent
}

func (x *GatewaySpec) GetReciprocalId() string {
	if x != nil {
		return x.ReciprocalId
	}
	return ""
}

func (x *GatewaySpec) GetFixedExpectations() []string {
	if x != nil {
		return x.FixedExpectations
	}
	return nil
}

// Timer specifies a timed transition to another state.
type Timer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                                   // Id - the unique identifier for the timer.
	Duration        string            `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                       // Duration - the duration of the timer.
	Target          string            `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`                                                                                                           // Target - state machine element ID to transition to.
	OutputTransform map[string]string `protobuf:"bytes,4,rep,name=outputTransform,proto3" json:"outputTransform,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // OutputTransform - The transformation to apply to variables during the transition.
}

func (x *Timer) Reset() {
	*x = Timer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timer) ProtoMessage() {}

func (x *Timer) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timer.ProtoReflect.Descriptor instead.
func (*Timer) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{12}
}

func (x *Timer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Timer) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Timer) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Timer) GetOutputTransform() map[string]string {
	if x != nil {
		return x.OutputTransform
	}
	return nil
}

// Target specifies the target for a state transition.
type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                 // Id for the transition.
	Conditions []string `protobuf:"bytes,2,rep,name=conditions,proto3" json:"conditions,omitempty"` // Conditions -to apply to the transition specified as Expr.
	Target     string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`         // Target ID for the transition.
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{13}
}

func (x *Target) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Target) GetConditions() []string {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Target) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// Error represents a known error name and code which may be thrown by the state machine.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // Id - the unique id for the error.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Name - the error unique name.
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` // Code - the unique code for the error.
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{14}
}

func (x *Error) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Error) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// CatchError specifies an error transition to another state.
type CatchError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                                   // Id - the unique id.
	ErrorId         string            `protobuf:"bytes,2,opt,name=errorId,proto3" json:"errorId,omitempty"`                                                                                                         // Id - the id of the error.
	Target          string            `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`                                                                                                           // Target ID for the transition.
	OutputTransform map[string]string `protobuf:"bytes,4,rep,name=outputTransform,proto3" json:"outputTransform,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // OutputTransform - The transformation to apply to variables during the transition.
}

func (x *CatchError) Reset() {
	*x = CatchError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchError) ProtoMessage() {}

func (x *CatchError) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchError.ProtoReflect.Descriptor instead.
func (*CatchError) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{15}
}

func (x *CatchError) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CatchError) GetErrorId() string {
	if x != nil {
		return x.ErrorId
	}
	return ""
}

func (x *CatchError) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *CatchError) GetOutputTransform() map[string]string {
	if x != nil {
		return x.OutputTransform
	}
	return nil
}

// Targets defines a set of targets for transition and as to whether only the first match should be executed.
type Targets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target        []*Target `protobuf:"bytes,1,rep,name=target,proto3" json:"target,omitempty"`                // Target - the target for a state transition.
	DefaultTarget int64     `protobuf:"varint,2,opt,name=defaultTarget,proto3" json:"defaultTarget,omitempty"` // DefaultTarget - the ordinal for a default target.
}

func (x *Targets) Reset() {
	*x = Targets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Targets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Targets) ProtoMessage() {}

func (x *Targets) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Targets.ProtoReflect.Descriptor instead.
func (*Targets) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{16}
}

func (x *Targets) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Targets) GetDefaultTarget() int64 {
	if x != nil {
		return x.DefaultTarget
	}
	return 0
}

// WorkflowState describes a current executing state inside a workflow state machine.
type WorkflowState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId                  string                          `protobuf:"bytes,1,opt,name=workflowId,proto3" json:"workflowId,omitempty"`                                                                                                                            // WorkflowId - the ID of the workflow version that provides the template for execution.
	ExecutionId                 string                          `protobuf:"bytes,2,opt,name=executionId,proto3" json:"executionId,omitempty"`                                                                                                                          // executionId - The id of the Execution this workflow state is for
	ElementId                   string                          `protobuf:"bytes,3,opt,name=elementId,proto3" json:"elementId,omitempty"`                                                                                                                              // ElementId - the currently executing element withing the workflow state machine.
	ElementType                 string                          `protobuf:"bytes,4,opt,name=elementType,proto3" json:"elementType,omitempty"`                                                                                                                          // ElementType - the currently executing element type, cached here to reduce lookups.
	Id                          []string                        `protobuf:"bytes,5,rep,name=id,proto3" json:"id,omitempty"`                                                                                                                                            // Id - a stack of IDs that descibe the state and its parents up to the original workflow instance ID.
	ExecuteVersion              string                          `protobuf:"bytes,22,opt,name=executeVersion,proto3" json:"executeVersion,omitempty"`                                                                                                                   // ExecuteVersion specifies a particular version to execute.
	Execute                     *string                         `protobuf:"bytes,7,opt,name=execute,proto3,oneof" json:"execute,omitempty"`                                                                                                                            // Execute - additional information required to execute depending on the element type.
	State                       CancellationState               `protobuf:"varint,8,opt,name=state,proto3,enum=CancellationState" json:"state,omitempty"`                                                                                                              // State - the current execution state of the state machine.
	Condition                   *string                         `protobuf:"bytes,9,opt,name=condition,proto3,oneof" json:"condition,omitempty"`                                                                                                                        // Condition - a message condition that needs to be fulfilled before proceeding.
	UnixTimeNano                int64                           `protobuf:"varint,10,opt,name=unixTimeNano,proto3" json:"unixTimeNano,omitempty"`                                                                                                                      // UnixTimeNano - the time this state was observed.
	Vars                        []byte                          `protobuf:"bytes,11,opt,name=vars,proto3" json:"vars,omitempty"`                                                                                                                                       // Vars - A go binary encoded map[string]interface{} of variables.
	Owners                      []string                        `protobuf:"bytes,12,rep,name=owners,proto3" json:"owners,omitempty"`                                                                                                                                   // Owners - a list of user owners for this state that may be responsible for completing tasks
	Groups                      []string                        `protobuf:"bytes,13,rep,name=groups,proto3" json:"groups,omitempty"`                                                                                                                                   // Groups - a list of user groups for this state that may be responsible for completing tasks
	Error                       *Error                          `protobuf:"bytes,14,opt,name=error,proto3" json:"error,omitempty"`                                                                                                                                     // Error - an error being carried by the state if it has faulted.
	Timer                       *WorkflowTimer                  `protobuf:"bytes,16,opt,name=timer,proto3" json:"timer,omitempty"`                                                                                                                                     // Timer - a time needed to transition to the next state.
	WorkflowName                string                          `protobuf:"bytes,17,opt,name=workflowName,proto3" json:"workflowName,omitempty"`                                                                                                                       // WorkflowName - name of this workflow to avoid lookups.
	ProcessName                 string                          `protobuf:"bytes,18,opt,name=processName,proto3" json:"processName,omitempty"`                                                                                                                         // ProcessName - name of this process to avoid lookups.
	ProcessInstanceId           string                          `protobuf:"bytes,19,opt,name=processInstanceId,proto3" json:"processInstanceId,omitempty"`                                                                                                             // ProcessInstanceId - the unique ID for the process instance.
	SatisfiesGatewayExpectation map[string]*SatisfiesGateway    `protobuf:"bytes,20,rep,name=satisfiesGatewayExpectation,proto3" json:"satisfiesGatewayExpectation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // SatisfiesGatewayExpectation - a list of gateways, and pathway covered that satisfy their expectations.
	GatewayExpectations         map[string]*GatewayExpectations `protobuf:"bytes,21,rep,name=gatewayExpectations,proto3" json:"gatewayExpectations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                 // GatewayExpectations - a list of dynamic gateway expectations set during traversing from a divergent gateway with a reciprocal.
}

func (x *WorkflowState) Reset() {
	*x = WorkflowState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowState) ProtoMessage() {}

func (x *WorkflowState) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowState.ProtoReflect.Descriptor instead.
func (*WorkflowState) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{17}
}

func (x *WorkflowState) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowState) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *WorkflowState) GetElementId() string {
	if x != nil {
		return x.ElementId
	}
	return ""
}

func (x *WorkflowState) GetElementType() string {
	if x != nil {
		return x.ElementType
	}
	return ""
}

func (x *WorkflowState) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *WorkflowState) GetExecuteVersion() string {
	if x != nil {
		return x.ExecuteVersion
	}
	return ""
}

func (x *WorkflowState) GetExecute() string {
	if x != nil && x.Execute != nil {
		return *x.Execute
	}
	return ""
}

func (x *WorkflowState) GetState() CancellationState {
	if x != nil {
		return x.State
	}
	return CancellationState_executing
}

func (x *WorkflowState) GetCondition() string {
	if x != nil && x.Condition != nil {
		return *x.Condition
	}
	return ""
}

func (x *WorkflowState) GetUnixTimeNano() int64 {
	if x != nil {
		return x.UnixTimeNano
	}
	return 0
}

func (x *WorkflowState) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *WorkflowState) GetOwners() []string {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *WorkflowState) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *WorkflowState) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WorkflowState) GetTimer() *WorkflowTimer {
	if x != nil {
		return x.Timer
	}
	return nil
}

func (x *WorkflowState) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *WorkflowState) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *WorkflowState) GetProcessInstanceId() string {
	if x != nil {
		return x.ProcessInstanceId
	}
	return ""
}

func (x *WorkflowState) GetSatisfiesGatewayExpectation() map[string]*SatisfiesGateway {
	if x != nil {
		return x.SatisfiesGatewayExpectation
	}
	return nil
}

func (x *WorkflowState) GetGatewayExpectations() map[string]*GatewayExpectations {
	if x != nil {
		return x.GatewayExpectations
	}
	return nil
}

type WorkflowStateSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId        string            `protobuf:"bytes,1,opt,name=workflowId,proto3" json:"workflowId,omitempty"`                // WorkflowId - the ID of the workflow version that provides the template for execution.
	ExecutionId       string            `protobuf:"bytes,2,opt,name=executionId,proto3" json:"executionId,omitempty"`              // ExecutionId - the execution that this state belongs to.
	ElementId         string            `protobuf:"bytes,3,opt,name=elementId,proto3" json:"elementId,omitempty"`                  // ElementId - the currently executing element withing the workflow state machine.
	ElementType       string            `protobuf:"bytes,4,opt,name=elementType,proto3" json:"elementType,omitempty"`              // ElementType - the currently executing element type, cached here to reduce lookups.
	Id                []string          `protobuf:"bytes,5,rep,name=id,proto3" json:"id,omitempty"`                                // Id - a stack of IDs that describe the state and its parents up to the original workflow instance ID.
	Execute           *string           `protobuf:"bytes,7,opt,name=execute,proto3,oneof" json:"execute,omitempty"`                // Execute - additional information required to execute depending on the element type.
	State             CancellationState `protobuf:"varint,8,opt,name=state,proto3,enum=CancellationState" json:"state,omitempty"`  // State - the current execution state of the state machine.
	Condition         *string           `protobuf:"bytes,9,opt,name=condition,proto3,oneof" json:"condition,omitempty"`            // Condition - a message condition that needs to be fulfilled before proceeding.
	UnixTimeNano      int64             `protobuf:"varint,10,opt,name=unixTimeNano,proto3" json:"unixTimeNano,omitempty"`          // UnixTimeNano - the time this state was observed.
	Vars              []byte            `protobuf:"bytes,11,opt,name=vars,proto3" json:"vars,omitempty"`                           // Vars - A go binary encoded map[string]interface{} of variables.
	Error             *Error            `protobuf:"bytes,14,opt,name=error,proto3" json:"error,omitempty"`                         // Error - an error being carried by the state if it has faulted.
	Timer             *WorkflowTimer    `protobuf:"bytes,16,opt,name=timer,proto3" json:"timer,omitempty"`                         // Timer - a time needed to transition to the next state.
	ProcessInstanceId string            `protobuf:"bytes,19,opt,name=processInstanceId,proto3" json:"processInstanceId,omitempty"` // ProcessInstanceId - the unique ID for the process instance.
}

func (x *WorkflowStateSummary) Reset() {
	*x = WorkflowStateSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowStateSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowStateSummary) ProtoMessage() {}

func (x *WorkflowStateSummary) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowStateSummary.ProtoReflect.Descriptor instead.
func (*WorkflowStateSummary) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{18}
}

func (x *WorkflowStateSummary) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowStateSummary) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *WorkflowStateSummary) GetElementId() string {
	if x != nil {
		return x.ElementId
	}
	return ""
}

func (x *WorkflowStateSummary) GetElementType() string {
	if x != nil {
		return x.ElementType
	}
	return ""
}

func (x *WorkflowStateSummary) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *WorkflowStateSummary) GetExecute() string {
	if x != nil && x.Execute != nil {
		return *x.Execute
	}
	return ""
}

func (x *WorkflowStateSummary) GetState() CancellationState {
	if x != nil {
		return x.State
	}
	return CancellationState_executing
}

func (x *WorkflowStateSummary) GetCondition() string {
	if x != nil && x.Condition != nil {
		return *x.Condition
	}
	return ""
}

func (x *WorkflowStateSummary) GetUnixTimeNano() int64 {
	if x != nil {
		return x.UnixTimeNano
	}
	return 0
}

func (x *WorkflowStateSummary) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *WorkflowStateSummary) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WorkflowStateSummary) GetTimer() *WorkflowTimer {
	if x != nil {
		return x.Timer
	}
	return nil
}

func (x *WorkflowStateSummary) GetProcessInstanceId() string {
	if x != nil {
		return x.ProcessInstanceId
	}
	return ""
}

type ProcessHistoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType          ProcessHistoryType `protobuf:"varint,1,opt,name=itemType,proto3,enum=ProcessHistoryType" json:"itemType,omitempty"`
	WorkflowId        *string            `protobuf:"bytes,2,opt,name=workflowId,proto3,oneof" json:"workflowId,omitempty"`
	ExecutionId       *string            `protobuf:"bytes,3,opt,name=executionId,proto3,oneof" json:"executionId,omitempty"`
	ElementId         *string            `protobuf:"bytes,4,opt,name=elementId,proto3,oneof" json:"elementId,omitempty"`
	ProcessInstanceId *string            `protobuf:"bytes,5,opt,name=processInstanceId,proto3,oneof" json:"processInstanceId,omitempty"`
	CancellationState *CancellationState `protobuf:"varint,6,opt,name=cancellationState,proto3,enum=CancellationState,oneof" json:"cancellationState,omitempty"`
	Vars              []byte             `protobuf:"bytes,7,opt,name=vars,proto3" json:"vars,omitempty"`
	Timer             *WorkflowTimer     `protobuf:"bytes,8,opt,name=timer,proto3,oneof" json:"timer,omitempty"`
	Error             *Error             `protobuf:"bytes,9,opt,name=error,proto3,oneof" json:"error,omitempty"`
	UnixTimeNano      int64              `protobuf:"varint,10,opt,name=unixTimeNano,proto3" json:"unixTimeNano,omitempty"`
	Execute           *string            `protobuf:"bytes,11,opt,name=execute,proto3,oneof" json:"execute,omitempty"`
}

func (x *ProcessHistoryEntry) Reset() {
	*x = ProcessHistoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHistoryEntry) ProtoMessage() {}

func (x *ProcessHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHistoryEntry.ProtoReflect.Descriptor instead.
func (*ProcessHistoryEntry) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{19}
}

func (x *ProcessHistoryEntry) GetItemType() ProcessHistoryType {
	if x != nil {
		return x.ItemType
	}
	return ProcessHistoryType_processExecute
}

func (x *ProcessHistoryEntry) GetWorkflowId() string {
	if x != nil && x.WorkflowId != nil {
		return *x.WorkflowId
	}
	return ""
}

func (x *ProcessHistoryEntry) GetExecutionId() string {
	if x != nil && x.ExecutionId != nil {
		return *x.ExecutionId
	}
	return ""
}

func (x *ProcessHistoryEntry) GetElementId() string {
	if x != nil && x.ElementId != nil {
		return *x.ElementId
	}
	return ""
}

func (x *ProcessHistoryEntry) GetProcessInstanceId() string {
	if x != nil && x.ProcessInstanceId != nil {
		return *x.ProcessInstanceId
	}
	return ""
}

func (x *ProcessHistoryEntry) GetCancellationState() CancellationState {
	if x != nil && x.CancellationState != nil {
		return *x.CancellationState
	}
	return CancellationState_executing
}

func (x *ProcessHistoryEntry) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *ProcessHistoryEntry) GetTimer() *WorkflowTimer {
	if x != nil {
		return x.Timer
	}
	return nil
}

func (x *ProcessHistoryEntry) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProcessHistoryEntry) GetUnixTimeNano() int64 {
	if x != nil {
		return x.UnixTimeNano
	}
	return 0
}

func (x *ProcessHistoryEntry) GetExecute() string {
	if x != nil && x.Execute != nil {
		return *x.Execute
	}
	return ""
}

type ProcessHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*ProcessHistoryEntry `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *ProcessHistory) Reset() {
	*x = ProcessHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHistory) ProtoMessage() {}

func (x *ProcessHistory) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHistory.ProtoReflect.Descriptor instead.
func (*ProcessHistory) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{20}
}

func (x *ProcessHistory) GetItem() []*ProcessHistoryEntry {
	if x != nil {
		return x.Item
	}
	return nil
}

type SatisfiesGateway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceTracking []string `protobuf:"bytes,1,rep,name=instanceTracking,proto3" json:"instanceTracking,omitempty"` // instanceTracking - a list of paths that satisfy the gateway.
}

func (x *SatisfiesGateway) Reset() {
	*x = SatisfiesGateway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SatisfiesGateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SatisfiesGateway) ProtoMessage() {}

func (x *SatisfiesGateway) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SatisfiesGateway.ProtoReflect.Descriptor instead.
func (*SatisfiesGateway) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{21}
}

func (x *SatisfiesGateway) GetInstanceTracking() []string {
	if x != nil {
		return x.InstanceTracking
	}
	return nil
}

type GatewayExpectations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpectedPaths []string `protobuf:"bytes,1,rep,name=expectedPaths,proto3" json:"expectedPaths,omitempty"` // ExpectedPaths - a list of paths that compose a gatew's expectaions
}

func (x *GatewayExpectations) Reset() {
	*x = GatewayExpectations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayExpectations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayExpectations) ProtoMessage() {}

func (x *GatewayExpectations) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayExpectations.ProtoReflect.Descriptor instead.
func (*GatewayExpectations) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{22}
}

func (x *GatewayExpectations) GetExpectedPaths() []string {
	if x != nil {
		return x.ExpectedPaths
	}
	return nil
}

type Gateway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetExpectations map[string]string `protobuf:"bytes,1,rep,name=metExpectations,proto3" json:"metExpectations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // MetExpectations - a list of expectations that were met for the gateway.
	Vars            [][]byte          `protobuf:"bytes,2,rep,name=vars,proto3" json:"vars,omitempty"`                                                                                                               // Vars - A go binary encoded map[string]interface{} of variables.
	Visits          int64             `protobuf:"varint,3,opt,name=visits,proto3" json:"visits,omitempty"`                                                                                                          // Visits - The number of visits this gateway has recieved
}

func (x *Gateway) Reset() {
	*x = Gateway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gateway) ProtoMessage() {}

func (x *Gateway) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gateway.ProtoReflect.Descriptor instead.
func (*Gateway) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{23}
}

func (x *Gateway) GetMetExpectations() map[string]string {
	if x != nil {
		return x.MetExpectations
	}
	return nil
}

func (x *Gateway) GetVars() [][]byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *Gateway) GetVisits() int64 {
	if x != nil {
		return x.Visits
	}
	return 0
}

// WorkflowTimerDefinition defines a workflow timer that can be used to trigger an event.
type WorkflowTimerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       WorkflowTimerType `protobuf:"varint,1,opt,name=type,proto3,enum=WorkflowTimerType" json:"type,omitempty"` // Type - whether the workflow timer is relative or absolute.
	Value      int64             `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`                      // Value - the time parameter.
	Repeat     int64             `protobuf:"varint,3,opt,name=repeat,proto3" json:"repeat,omitempty"`                    // Repeat - the repeat interval for the timer.
	DropEvents bool              `protobuf:"varint,4,opt,name=dropEvents,proto3" json:"dropEvents,omitempty"`            // DropEvents - unused.
}

func (x *WorkflowTimerDefinition) Reset() {
	*x = WorkflowTimerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowTimerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTimerDefinition) ProtoMessage() {}

func (x *WorkflowTimerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTimerDefinition.ProtoReflect.Descriptor instead.
func (*WorkflowTimerDefinition) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{24}
}

func (x *WorkflowTimerDefinition) GetType() WorkflowTimerType {
	if x != nil {
		return x.Type
	}
	return WorkflowTimerType_duration
}

func (x *WorkflowTimerDefinition) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *WorkflowTimerDefinition) GetRepeat() int64 {
	if x != nil {
		return x.Repeat
	}
	return 0
}

func (x *WorkflowTimerDefinition) GetDropEvents() bool {
	if x != nil {
		return x.DropEvents
	}
	return false
}

// WorkflowTimer holds the last execution state of a timer.
type WorkflowTimer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastFired int64 `protobuf:"varint,1,opt,name=lastFired,proto3" json:"lastFired,omitempty"` // LastFired - the time in UNIX nanoseconds since the timer was last executed.
	Count     int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`         // Count - the number of times the timer has fired.
}

func (x *WorkflowTimer) Reset() {
	*x = WorkflowTimer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowTimer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTimer) ProtoMessage() {}

func (x *WorkflowTimer) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTimer.ProtoReflect.Descriptor instead.
func (*WorkflowTimer) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{25}
}

func (x *WorkflowTimer) GetLastFired() int64 {
	if x != nil {
		return x.LastFired
	}
	return 0
}

func (x *WorkflowTimer) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Execution contains all of the metadata for a currently running workflow.
type Execution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionId       string   `protobuf:"bytes,1,opt,name=executionId,proto3" json:"executionId,omitempty"`             // executionId - The id of this particular BPMExecution
	WorkflowId        string   `protobuf:"bytes,2,opt,name=workflowId,proto3" json:"workflowId,omitempty"`               // WorkflowId - the workflow version ID that this instance is executing.
	WorkflowName      string   `protobuf:"bytes,5,opt,name=workflowName,proto3" json:"workflowName,omitempty"`           // WorkflowName - name of this workflow to avoid lookups.
	ProcessInstanceId []string `protobuf:"bytes,6,rep,name=processInstanceId,proto3" json:"processInstanceId,omitempty"` // ProcessInstance - process instances berlonging to this workflow instance.
}

func (x *Execution) Reset() {
	*x = Execution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execution) ProtoMessage() {}

func (x *Execution) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execution.ProtoReflect.Descriptor instead.
func (*Execution) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{26}
}

func (x *Execution) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *Execution) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *Execution) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *Execution) GetProcessInstanceId() []string {
	if x != nil {
		return x.ProcessInstanceId
	}
	return nil
}

type ProcessInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessInstanceId string          `protobuf:"bytes,1,opt,name=processInstanceId,proto3" json:"processInstanceId,omitempty"`                                                                                      // ProcessInstanceId - the unique ID for the process instance.
	ExecutionId       string          `protobuf:"bytes,2,opt,name=executionId,proto3" json:"executionId,omitempty"`                                                                                                  // executionId - The id of this particular BPMExecution
	ParentProcessId   *string         `protobuf:"bytes,3,opt,name=parentProcessId,proto3,oneof" json:"parentProcessId,omitempty"`                                                                                    // ParentProcessInstanceId - the parent process instance that launched this process - if nil, the workflow instance launched the process instance.
	ParentElementId   *string         `protobuf:"bytes,4,opt,name=parentElementId,proto3,oneof" json:"parentElementId,omitempty"`                                                                                    // ParentElementId - the ID of the element in the parent process that triggered the launch of this process instance.
	WorkflowId        string          `protobuf:"bytes,5,opt,name=workflowId,proto3" json:"workflowId,omitempty"`                                                                                                    // WorkflowId - the workflow version ID that this instance is executing.
	WorkflowName      string          `protobuf:"bytes,6,opt,name=workflowName,proto3" json:"workflowName,omitempty"`                                                                                                // WorkflowName - name of this workflow to avoid lookups.
	ProcessName       string          `protobuf:"bytes,7,opt,name=processName,proto3" json:"processName,omitempty"`                                                                                                  // ProcessName - name of this process to avoid lookups.
	GatewayComplete   map[string]bool `protobuf:"bytes,8,rep,name=gatewayComplete,proto3" json:"gatewayComplete,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // GatewayComplete - completed gateway instances register
}

func (x *ProcessInstance) Reset() {
	*x = ProcessInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInstance) ProtoMessage() {}

func (x *ProcessInstance) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInstance.ProtoReflect.Descriptor instead.
func (*ProcessInstance) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{27}
}

func (x *ProcessInstance) GetProcessInstanceId() string {
	if x != nil {
		return x.ProcessInstanceId
	}
	return ""
}

func (x *ProcessInstance) GetExecutionId() string {
	if x != nil {
		return x.ExecutionId
	}
	return ""
}

func (x *ProcessInstance) GetParentProcessId() string {
	if x != nil && x.ParentProcessId != nil {
		return *x.ParentProcessId
	}
	return ""
}

func (x *ProcessInstance) GetParentElementId() string {
	if x != nil && x.ParentElementId != nil {
		return *x.ParentElementId
	}
	return ""
}

func (x *ProcessInstance) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ProcessInstance) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *ProcessInstance) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *ProcessInstance) GetGatewayComplete() map[string]bool {
	if x != nil {
		return x.GatewayComplete
	}
	return nil
}

// MessageInstance represents a workflow message.
type MessageInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                     // MessageId - the unique messageId for the message.
	CorrelationKey string `protobuf:"bytes,2,opt,name=correlationKey,proto3" json:"correlationKey,omitempty"` // CorrelationKey - a receiving key to correlate this message to.
	Vars           []byte `protobuf:"bytes,3,opt,name=vars,proto3" json:"vars,omitempty"`                     // Vars - A go binary encoded map[string]interface{} of variables.
}

func (x *MessageInstance) Reset() {
	*x = MessageInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInstance) ProtoMessage() {}

func (x *MessageInstance) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInstance.ProtoReflect.Descriptor instead.
func (*MessageInstance) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{28}
}

func (x *MessageInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageInstance) GetCorrelationKey() string {
	if x != nil {
		return x.CorrelationKey
	}
	return ""
}

func (x *MessageInstance) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type MessageRecipient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           RecipientType `protobuf:"varint,1,opt,name=type,proto3,enum=RecipientType" json:"type,omitempty"`
	Id             string        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CorrelationKey string        `protobuf:"bytes,3,opt,name=CorrelationKey,proto3" json:"CorrelationKey,omitempty"`
}

func (x *MessageRecipient) Reset() {
	*x = MessageRecipient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRecipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRecipient) ProtoMessage() {}

func (x *MessageRecipient) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRecipient.ProtoReflect.Descriptor instead.
func (*MessageRecipient) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{29}
}

func (x *MessageRecipient) GetType() RecipientType {
	if x != nil {
		return x.Type
	}
	return RecipientType_job
}

func (x *MessageRecipient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageRecipient) GetCorrelationKey() string {
	if x != nil {
		return x.CorrelationKey
	}
	return ""
}

type UserTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *UserTasks) Reset() {
	*x = UserTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTasks) ProtoMessage() {}

func (x *UserTasks) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTasks.ProtoReflect.Descriptor instead.
func (*UserTasks) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{30}
}

func (x *UserTasks) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type ApiAuthorizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers      map[string]string `protobuf:"bytes,1,rep,name=Headers,proto3" json:"Headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Function     string            `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	WorkflowName string            `protobuf:"bytes,3,opt,name=workflowName,proto3" json:"workflowName,omitempty"`
	User         string            `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ApiAuthorizationRequest) Reset() {
	*x = ApiAuthorizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAuthorizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAuthorizationRequest) ProtoMessage() {}

func (x *ApiAuthorizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAuthorizationRequest.ProtoReflect.Descriptor instead.
func (*ApiAuthorizationRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{31}
}

func (x *ApiAuthorizationRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ApiAuthorizationRequest) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *ApiAuthorizationRequest) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *ApiAuthorizationRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ApiAuthorizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorized bool   `protobuf:"varint,1,opt,name=authorized,proto3" json:"authorized,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *ApiAuthorizationResponse) Reset() {
	*x = ApiAuthorizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAuthorizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAuthorizationResponse) ProtoMessage() {}

func (x *ApiAuthorizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAuthorizationResponse.ProtoReflect.Descriptor instead.
func (*ApiAuthorizationResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{32}
}

func (x *ApiAuthorizationResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *ApiAuthorizationResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ApiAuthenticationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers map[string]string `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ApiAuthenticationRequest) Reset() {
	*x = ApiAuthenticationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAuthenticationRequest) ProtoMessage() {}

func (x *ApiAuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAuthenticationRequest.ProtoReflect.Descriptor instead.
func (*ApiAuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{33}
}

func (x *ApiAuthenticationRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type ApiAuthenticationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Authenticated bool   `protobuf:"varint,2,opt,name=Authenticated,proto3" json:"Authenticated,omitempty"`
}

func (x *ApiAuthenticationResponse) Reset() {
	*x = ApiAuthenticationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAuthenticationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAuthenticationResponse) ProtoMessage() {}

func (x *ApiAuthenticationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAuthenticationResponse.ProtoReflect.Descriptor instead.
func (*ApiAuthenticationResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{34}
}

func (x *ApiAuthenticationResponse) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ApiAuthenticationResponse) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

type LaunchWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vars []byte `protobuf:"bytes,2,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *LaunchWorkflowRequest) Reset() {
	*x = LaunchWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchWorkflowRequest) ProtoMessage() {}

func (x *LaunchWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchWorkflowRequest.ProtoReflect.Descriptor instead.
func (*LaunchWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{35}
}

func (x *LaunchWorkflowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LaunchWorkflowRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type LaunchWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	WorkflowId string `protobuf:"bytes,2,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
}

func (x *LaunchWorkflowResponse) Reset() {
	*x = LaunchWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchWorkflowResponse) ProtoMessage() {}

func (x *LaunchWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchWorkflowResponse.ProtoReflect.Descriptor instead.
func (*LaunchWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{36}
}

func (x *LaunchWorkflowResponse) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *LaunchWorkflowResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type CancelProcessInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State CancellationState `protobuf:"varint,2,opt,name=state,proto3,enum=CancellationState" json:"state,omitempty"`
	Error *Error            `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CancelProcessInstanceRequest) Reset() {
	*x = CancelProcessInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelProcessInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelProcessInstanceRequest) ProtoMessage() {}

func (x *CancelProcessInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelProcessInstanceRequest.ProtoReflect.Descriptor instead.
func (*CancelProcessInstanceRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{37}
}

func (x *CancelProcessInstanceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CancelProcessInstanceRequest) GetState() CancellationState {
	if x != nil {
		return x.State
	}
	return CancellationState_executing
}

func (x *CancelProcessInstanceRequest) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ListExecutionProcessesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListExecutionProcessesRequest) Reset() {
	*x = ListExecutionProcessesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExecutionProcessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExecutionProcessesRequest) ProtoMessage() {}

func (x *ListExecutionProcessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExecutionProcessesRequest.ProtoReflect.Descriptor instead.
func (*ListExecutionProcessesRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{38}
}

func (x *ListExecutionProcessesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListExecutionProcessesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessInstanceId []string `protobuf:"bytes,1,rep,name=processInstanceId,proto3" json:"processInstanceId,omitempty"` // ProcessInstance - process instances berlonging to this workflow instance.
}

func (x *ListExecutionProcessesResult) Reset() {
	*x = ListExecutionProcessesResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExecutionProcessesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExecutionProcessesResult) ProtoMessage() {}

func (x *ListExecutionProcessesResult) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExecutionProcessesResult.ProtoReflect.Descriptor instead.
func (*ListExecutionProcessesResult) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{39}
}

func (x *ListExecutionProcessesResult) GetProcessInstanceId() []string {
	if x != nil {
		return x.ProcessInstanceId
	}
	return nil
}

type GetProcessInstanceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProcessInstanceStatusRequest) Reset() {
	*x = GetProcessInstanceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessInstanceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessInstanceStatusRequest) ProtoMessage() {}

func (x *GetProcessInstanceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessInstanceStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProcessInstanceStatusRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{40}
}

func (x *GetProcessInstanceStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProcessInstanceStatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessState []*WorkflowState `protobuf:"bytes,1,rep,name=processState,proto3" json:"processState,omitempty"` // ProcessInstance - process instances berlonging to this workflow instance.
}

func (x *GetProcessInstanceStatusResult) Reset() {
	*x = GetProcessInstanceStatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessInstanceStatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessInstanceStatusResult) ProtoMessage() {}

func (x *GetProcessInstanceStatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessInstanceStatusResult.ProtoReflect.Descriptor instead.
func (*GetProcessInstanceStatusResult) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{41}
}

func (x *GetProcessInstanceStatusResult) GetProcessState() []*WorkflowState {
	if x != nil {
		return x.ProcessState
	}
	return nil
}

type ListExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowName string `protobuf:"bytes,1,opt,name=workflowName,proto3" json:"workflowName,omitempty"`
}

func (x *ListExecutionRequest) Reset() {
	*x = ListExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExecutionRequest) ProtoMessage() {}

func (x *ListExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExecutionRequest.ProtoReflect.Descriptor instead.
func (*ListExecutionRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{42}
}

func (x *ListExecutionRequest) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

type ListExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ListExecutionResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListExecutionResponse) Reset() {
	*x = ListExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExecutionResponse) ProtoMessage() {}

func (x *ListExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExecutionResponse.ProtoReflect.Descriptor instead.
func (*ListExecutionResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{43}
}

func (x *ListExecutionResponse) GetResult() []*ListExecutionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListExecutionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ListExecutionResult) Reset() {
	*x = ListExecutionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExecutionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExecutionResult) ProtoMessage() {}

func (x *ListExecutionResult) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExecutionResult.ProtoReflect.Descriptor instead.
func (*ListExecutionResult) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{44}
}

func (x *ListExecutionResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListExecutionResult) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type WorkflowInstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkflowId string `protobuf:"bytes,2,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
}

func (x *WorkflowInstanceInfo) Reset() {
	*x = WorkflowInstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInstanceInfo) ProtoMessage() {}

func (x *WorkflowInstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInstanceInfo.ProtoReflect.Descriptor instead.
func (*WorkflowInstanceInfo) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{45}
}

func (x *WorkflowInstanceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowInstanceInfo) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type WorkflowInstanceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State []*WorkflowState `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
}

func (x *WorkflowInstanceStatus) Reset() {
	*x = WorkflowInstanceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInstanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInstanceStatus) ProtoMessage() {}

func (x *WorkflowInstanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInstanceStatus.ProtoReflect.Descriptor instead.
func (*WorkflowInstanceStatus) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{46}
}

func (x *WorkflowInstanceStatus) GetState() []*WorkflowState {
	if x != nil {
		return x.State
	}
	return nil
}

type ListWorkflowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ListWorkflowResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListWorkflowsResponse) Reset() {
	*x = ListWorkflowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsResponse) ProtoMessage() {}

func (x *ListWorkflowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowsResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{47}
}

func (x *ListWorkflowsResponse) GetResult() []*ListWorkflowResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListWorkflowResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ListWorkflowResult) Reset() {
	*x = ListWorkflowResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowResult) ProtoMessage() {}

func (x *ListWorkflowResult) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowResult.ProtoReflect.Descriptor instead.
func (*ListWorkflowResult) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{48}
}

func (x *ListWorkflowResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListWorkflowResult) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CorrelationKey string `protobuf:"bytes,2,opt,name=correlationKey,proto3" json:"correlationKey,omitempty"`
	Vars           []byte `protobuf:"bytes,3,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{49}
}

func (x *SendMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendMessageRequest) GetCorrelationKey() string {
	if x != nil {
		return x.CorrelationKey
	}
	return ""
}

func (x *SendMessageRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type WorkflowInstanceComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowName       string            `protobuf:"bytes,1,opt,name=workflowName,proto3" json:"workflowName,omitempty"`
	WorkflowId         string            `protobuf:"bytes,2,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	WorkflowInstanceId string            `protobuf:"bytes,3,opt,name=workflowInstanceId,proto3" json:"workflowInstanceId,omitempty"`
	WorkflowState      CancellationState `protobuf:"varint,4,opt,name=workflowState,proto3,enum=CancellationState" json:"workflowState,omitempty"`
	Error              *Error            `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WorkflowInstanceComplete) Reset() {
	*x = WorkflowInstanceComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInstanceComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInstanceComplete) ProtoMessage() {}

func (x *WorkflowInstanceComplete) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInstanceComplete.ProtoReflect.Descriptor instead.
func (*WorkflowInstanceComplete) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{50}
}

func (x *WorkflowInstanceComplete) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *WorkflowInstanceComplete) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowInstanceComplete) GetWorkflowInstanceId() string {
	if x != nil {
		return x.WorkflowInstanceId
	}
	return ""
}

func (x *WorkflowInstanceComplete) GetWorkflowState() CancellationState {
	if x != nil {
		return x.WorkflowState
	}
	return CancellationState_executing
}

func (x *WorkflowInstanceComplete) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CompleteManualTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Vars       []byte `protobuf:"bytes,2,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *CompleteManualTaskRequest) Reset() {
	*x = CompleteManualTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteManualTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteManualTaskRequest) ProtoMessage() {}

func (x *CompleteManualTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteManualTaskRequest.ProtoReflect.Descriptor instead.
func (*CompleteManualTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{51}
}

func (x *CompleteManualTaskRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *CompleteManualTaskRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type CompleteServiceTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Vars       []byte `protobuf:"bytes,2,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *CompleteServiceTaskRequest) Reset() {
	*x = CompleteServiceTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteServiceTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteServiceTaskRequest) ProtoMessage() {}

func (x *CompleteServiceTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteServiceTaskRequest.ProtoReflect.Descriptor instead.
func (*CompleteServiceTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{52}
}

func (x *CompleteServiceTaskRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *CompleteServiceTaskRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type CompleteSendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Vars       []byte `protobuf:"bytes,2,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *CompleteSendMessageRequest) Reset() {
	*x = CompleteSendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteSendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteSendMessageRequest) ProtoMessage() {}

func (x *CompleteSendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteSendMessageRequest.ProtoReflect.Descriptor instead.
func (*CompleteSendMessageRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{53}
}

func (x *CompleteSendMessageRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *CompleteSendMessageRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type CompleteUserTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Owner      string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Vars       []byte `protobuf:"bytes,3,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *CompleteUserTaskRequest) Reset() {
	*x = CompleteUserTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUserTaskRequest) ProtoMessage() {}

func (x *CompleteUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUserTaskRequest.ProtoReflect.Descriptor instead.
func (*CompleteUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{54}
}

func (x *CompleteUserTaskRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *CompleteUserTaskRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CompleteUserTaskRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type ListUserTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *ListUserTasksRequest) Reset() {
	*x = ListUserTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTasksRequest) ProtoMessage() {}

func (x *ListUserTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTasksRequest.ProtoReflect.Descriptor instead.
func (*ListUserTasksRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{55}
}

func (x *ListUserTasksRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type GetUserTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner      string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	TrackingId string `protobuf:"bytes,2,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
}

func (x *GetUserTaskRequest) Reset() {
	*x = GetUserTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTaskRequest) ProtoMessage() {}

func (x *GetUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTaskRequest.ProtoReflect.Descriptor instead.
func (*GetUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{56}
}

func (x *GetUserTaskRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetUserTaskRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

type GetUserTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId  string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Owner       string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Vars        []byte `protobuf:"bytes,5,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *GetUserTaskResponse) Reset() {
	*x = GetUserTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTaskResponse) ProtoMessage() {}

func (x *GetUserTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTaskResponse.ProtoReflect.Descriptor instead.
func (*GetUserTaskResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{57}
}

func (x *GetUserTaskResponse) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *GetUserTaskResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetUserTaskResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetUserTaskResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserTaskResponse) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type HandleWorkflowErrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	ErrorCode  string `protobuf:"bytes,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Vars       []byte `protobuf:"bytes,4,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *HandleWorkflowErrorRequest) Reset() {
	*x = HandleWorkflowErrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWorkflowErrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWorkflowErrorRequest) ProtoMessage() {}

func (x *HandleWorkflowErrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWorkflowErrorRequest.ProtoReflect.Descriptor instead.
func (*HandleWorkflowErrorRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{58}
}

func (x *HandleWorkflowErrorRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *HandleWorkflowErrorRequest) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *HandleWorkflowErrorRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HandleWorkflowErrorRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type HandleWorkflowErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handled bool `protobuf:"varint,1,opt,name=handled,proto3" json:"handled,omitempty"`
}

func (x *HandleWorkflowErrorResponse) Reset() {
	*x = HandleWorkflowErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWorkflowErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWorkflowErrorResponse) ProtoMessage() {}

func (x *HandleWorkflowErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWorkflowErrorResponse.ProtoReflect.Descriptor instead.
func (*HandleWorkflowErrorResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{59}
}

func (x *HandleWorkflowErrorResponse) GetHandled() bool {
	if x != nil {
		return x.Handled
	}
	return false
}

type GetWorkflowVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWorkflowVersionsRequest) Reset() {
	*x = GetWorkflowVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowVersionsRequest) ProtoMessage() {}

func (x *GetWorkflowVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowVersionsRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowVersionsRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{60}
}

func (x *GetWorkflowVersionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetWorkflowVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions *WorkflowVersions `protobuf:"bytes,1,opt,name=versions,proto3" json:"versions,omitempty"`
}

func (x *GetWorkflowVersionsResponse) Reset() {
	*x = GetWorkflowVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowVersionsResponse) ProtoMessage() {}

func (x *GetWorkflowVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowVersionsResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowVersionsResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{61}
}

func (x *GetWorkflowVersionsResponse) GetVersions() *WorkflowVersions {
	if x != nil {
		return x.Versions
	}
	return nil
}

type GetWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetWorkflowRequest) Reset() {
	*x = GetWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRequest) ProtoMessage() {}

func (x *GetWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{62}
}

func (x *GetWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definition *Workflow `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *GetWorkflowResponse) Reset() {
	*x = GetWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowResponse) ProtoMessage() {}

func (x *GetWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{63}
}

func (x *GetWorkflowResponse) GetDefinition() *Workflow {
	if x != nil {
		return x.Definition
	}
	return nil
}

type GetProcessHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetProcessHistoryRequest) Reset() {
	*x = GetProcessHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessHistoryRequest) ProtoMessage() {}

func (x *GetProcessHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetProcessHistoryRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{64}
}

func (x *GetProcessHistoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProcessHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*ProcessHistoryEntry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
}

func (x *GetProcessHistoryResponse) Reset() {
	*x = GetProcessHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessHistoryResponse) ProtoMessage() {}

func (x *GetProcessHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetProcessHistoryResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{65}
}

func (x *GetProcessHistoryResponse) GetEntry() []*ProcessHistoryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type GetServiceTaskRoutingIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RequestedId string `protobuf:"bytes,2,opt,name=requestedId,proto3" json:"requestedId,omitempty"`
}

func (x *GetServiceTaskRoutingIDRequest) Reset() {
	*x = GetServiceTaskRoutingIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceTaskRoutingIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceTaskRoutingIDRequest) ProtoMessage() {}

func (x *GetServiceTaskRoutingIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceTaskRoutingIDRequest.ProtoReflect.Descriptor instead.
func (*GetServiceTaskRoutingIDRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{66}
}

func (x *GetServiceTaskRoutingIDRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetServiceTaskRoutingIDRequest) GetRequestedId() string {
	if x != nil {
		return x.RequestedId
	}
	return ""
}

type GetServiceTaskRoutingIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetServiceTaskRoutingIDResponse) Reset() {
	*x = GetServiceTaskRoutingIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceTaskRoutingIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceTaskRoutingIDResponse) ProtoMessage() {}

func (x *GetServiceTaskRoutingIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceTaskRoutingIDResponse.ProtoReflect.Descriptor instead.
func (*GetServiceTaskRoutingIDResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{67}
}

func (x *GetServiceTaskRoutingIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVersionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientVersion     string `protobuf:"bytes,1,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	CompatibleVersion string `protobuf:"bytes,2,opt,name=compatibleVersion,proto3" json:"compatibleVersion,omitempty"`
}

func (x *GetVersionInfoRequest) Reset() {
	*x = GetVersionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionInfoRequest) ProtoMessage() {}

func (x *GetVersionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVersionInfoRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{68}
}

func (x *GetVersionInfoRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *GetVersionInfoRequest) GetCompatibleVersion() string {
	if x != nil {
		return x.CompatibleVersion
	}
	return ""
}

type GetVersionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerVersion        string `protobuf:"bytes,1,opt,name=serverVersion,proto3" json:"serverVersion,omitempty"`
	MinCompatibleVersion string `protobuf:"bytes,2,opt,name=minCompatibleVersion,proto3" json:"minCompatibleVersion,omitempty"`
	Connect              bool   `protobuf:"varint,3,opt,name=connect,proto3" json:"connect,omitempty"`
}

func (x *GetVersionInfoResponse) Reset() {
	*x = GetVersionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionInfoResponse) ProtoMessage() {}

func (x *GetVersionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVersionInfoResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{69}
}

func (x *GetVersionInfoResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *GetVersionInfoResponse) GetMinCompatibleVersion() string {
	if x != nil {
		return x.MinCompatibleVersion
	}
	return ""
}

func (x *GetVersionInfoResponse) GetConnect() bool {
	if x != nil {
		return x.Connect
	}
	return false
}

type WorkflowStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflows         int64 `protobuf:"varint,1,opt,name=Workflows,proto3" json:"Workflows,omitempty"`
	InstancesStarted  int64 `protobuf:"varint,2,opt,name=InstancesStarted,proto3" json:"InstancesStarted,omitempty"`
	InstancesComplete int64 `protobuf:"varint,3,opt,name=InstancesComplete,proto3" json:"InstancesComplete,omitempty"`
}

func (x *WorkflowStats) Reset() {
	*x = WorkflowStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowStats) ProtoMessage() {}

func (x *WorkflowStats) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowStats.ProtoReflect.Descriptor instead.
func (*WorkflowStats) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{70}
}

func (x *WorkflowStats) GetWorkflows() int64 {
	if x != nil {
		return x.Workflows
	}
	return 0
}

func (x *WorkflowStats) GetInstancesStarted() int64 {
	if x != nil {
		return x.InstancesStarted
	}
	return 0
}

func (x *WorkflowStats) GetInstancesComplete() int64 {
	if x != nil {
		return x.InstancesComplete
	}
	return 0
}

type TelemetryState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *WorkflowState               `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Log   map[int64]*TelemetryLogEntry `protobuf:"bytes,2,rep,name=log,proto3" json:"log,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TelemetryState) Reset() {
	*x = TelemetryState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryState) ProtoMessage() {}

func (x *TelemetryState) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryState.ProtoReflect.Descriptor instead.
func (*TelemetryState) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{71}
}

func (x *TelemetryState) GetState() *WorkflowState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *TelemetryState) GetLog() map[int64]*TelemetryLogEntry {
	if x != nil {
		return x.Log
	}
	return nil
}

type TelemetryLogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingID string            `protobuf:"bytes,1,opt,name=trackingID,proto3" json:"trackingID,omitempty"`
	Source     LogSource         `protobuf:"varint,2,opt,name=source,proto3,enum=LogSource" json:"source,omitempty"`
	Message    string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Code       int32             `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Attributes map[string]string `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TelemetryLogEntry) Reset() {
	*x = TelemetryLogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryLogEntry) ProtoMessage() {}

func (x *TelemetryLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryLogEntry.ProtoReflect.Descriptor instead.
func (*TelemetryLogEntry) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{72}
}

func (x *TelemetryLogEntry) GetTrackingID() string {
	if x != nil {
		return x.TrackingID
	}
	return ""
}

func (x *TelemetryLogEntry) GetSource() LogSource {
	if x != nil {
		return x.Source
	}
	return LogSource_logSourceEngine
}

func (x *TelemetryLogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TelemetryLogEntry) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TelemetryLogEntry) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type TaskSpecVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *TaskSpecVersions) Reset() {
	*x = TaskSpecVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskSpecVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSpecVersions) ProtoMessage() {}

func (x *TaskSpecVersions) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSpecVersions.ProtoReflect.Descriptor instead.
func (*TaskSpecVersions) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{73}
}

func (x *TaskSpecVersions) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

// Task specification
type TaskSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    string          `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`       // Version of task specification.
	Kind       string          `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`             // Kind of task specification, may be "ServiceTask" or "UserTask".
	Metadata   *TaskMetadata   `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`     // Metadata document any non functional information regarding the TaskSpec.
	Behaviour  *TaskBehaviour  `protobuf:"bytes,4,opt,name=behaviour,proto3" json:"behaviour,omitempty"`   // Behaviour documents instance behaviour.
	Parameters *TaskParameters `protobuf:"bytes,5,opt,name=parameters,proto3" json:"parameters,omitempty"` // Parameters document input and output parameters for the task.
	Events     *TaskEvents     `protobuf:"bytes,6,opt,name=events,proto3" json:"events,omitempty"`         // Events document errors and messages that can be emitted from the task.
}

func (x *TaskSpec) Reset() {
	*x = TaskSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSpec) ProtoMessage() {}

func (x *TaskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSpec.ProtoReflect.Descriptor instead.
func (*TaskSpec) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{74}
}

func (x *TaskSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *TaskSpec) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TaskSpec) GetMetadata() *TaskMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskSpec) GetBehaviour() *TaskBehaviour {
	if x != nil {
		return x.Behaviour
	}
	return nil
}

func (x *TaskSpec) GetParameters() *TaskParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *TaskSpec) GetEvents() *TaskEvents {
	if x != nil {
		return x.Events
	}
	return nil
}

type TaskMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                  string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                                                                             // Uid of the task as a KSUID.
	Type                 string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                                                                                           // Type - the name for the task when referred to by process.
	Version              string            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`                                                                                                     // Version - the task version number.  This is useful to describe that the task has internally changed without modifying the input/outout parameters.
	Short                string            `protobuf:"bytes,4,opt,name=short,proto3" json:"short,omitempty"`                                                                                                         // Short description of the task.
	Description          string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                                                                                             // Description - a long description of the task.
	Labels               []string          `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`                                                                                                       // Labels - a comma seperated list of searchable tags for the task.
	EstimatedMaxDuration uint64            `protobuf:"varint,7,opt,name=estimatedMaxDuration,proto3" json:"estimatedMaxDuration,omitempty"`                                                                          // EstimatedMaxDuration documents how long the task is expected to run for.
	ExtensionData        map[string]string `protobuf:"bytes,8,rep,name=extensionData,proto3" json:"extensionData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // ExtensionData - a map of values that can be used by third party tools.
}

func (x *TaskMetadata) Reset() {
	*x = TaskMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMetadata) ProtoMessage() {}

func (x *TaskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMetadata.ProtoReflect.Descriptor instead.
func (*TaskMetadata) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{75}
}

func (x *TaskMetadata) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TaskMetadata) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TaskMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *TaskMetadata) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *TaskMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskMetadata) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *TaskMetadata) GetEstimatedMaxDuration() uint64 {
	if x != nil {
		return x.EstimatedMaxDuration
	}
	return 0
}

func (x *TaskMetadata) GetExtensionData() map[string]string {
	if x != nil {
		return x.ExtensionData
	}
	return nil
}

type TaskParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParameterGroup []*ParameterGroup `protobuf:"bytes,1,rep,name=parameterGroup,proto3" json:"parameterGroup,omitempty"` // ParameterGroup is a list of parameters with their categorization.  This is useful for display.
	Input          []*Parameter      `protobuf:"bytes,2,rep,name=input,proto3" json:"input,omitempty"`                   // Input documents input parameters to the task.
	Output         []*Parameter      `protobuf:"bytes,3,rep,name=output,proto3" json:"output,omitempty"`                 // Output documents output parameters for the task.
}

func (x *TaskParameters) Reset() {
	*x = TaskParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskParameters) ProtoMessage() {}

func (x *TaskParameters) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskParameters.ProtoReflect.Descriptor instead.
func (*TaskParameters) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{76}
}

func (x *TaskParameters) GetParameterGroup() []*ParameterGroup {
	if x != nil {
		return x.ParameterGroup
	}
	return nil
}

func (x *TaskParameters) GetInput() []*Parameter {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *TaskParameters) GetOutput() []*Parameter {
	if x != nil {
		return x.Output
	}
	return nil
}

type TaskEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   []*Error   `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`     // Error workflow events that can be returned from the task.
	Message []*Message `protobuf:"bytes,2,rep,name=Message,proto3" json:"Message,omitempty"` // Message workflow events that can be returned from the task.
}

func (x *TaskEvents) Reset() {
	*x = TaskEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskEvents) ProtoMessage() {}

func (x *TaskEvents) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskEvents.ProtoReflect.Descriptor instead.
func (*TaskEvents) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{77}
}

func (x *TaskEvents) GetError() []*Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TaskEvents) GetMessage() []*Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type TaskBehaviour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultRetry *DefaultTaskRetry `protobuf:"bytes,1,opt,name=defaultRetry,proto3" json:"defaultRetry,omitempty"` // Retry - the recommended retry behavior for the task, this could be overriden by a workflow.
	Unsafe       bool              `protobuf:"varint,2,opt,name=unsafe,proto3" json:"unsafe,omitempty"`            // Unsafe labels the task as non-idempotent.  Non-idempotent tasks are highly unrecommended.
	Mock         bool              `protobuf:"varint,3,opt,name=mock,proto3" json:"mock,omitempty"`                // Mock this task as it has no concrete implementation.
	Deprecated   bool              `protobuf:"varint,4,opt,name=deprecated,proto3" json:"deprecated,omitempty"`    // Deprecated task.  Workflows can not be executed that include this task.
}

func (x *TaskBehaviour) Reset() {
	*x = TaskBehaviour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskBehaviour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskBehaviour) ProtoMessage() {}

func (x *TaskBehaviour) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskBehaviour.ProtoReflect.Descriptor instead.
func (*TaskBehaviour) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{78}
}

func (x *TaskBehaviour) GetDefaultRetry() *DefaultTaskRetry {
	if x != nil {
		return x.DefaultRetry
	}
	return nil
}

func (x *TaskBehaviour) GetUnsafe() bool {
	if x != nil {
		return x.Unsafe
	}
	return false
}

func (x *TaskBehaviour) GetMock() bool {
	if x != nil {
		return x.Mock
	}
	return false
}

func (x *TaskBehaviour) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

type DefaultTaskRetry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number          uint32                         `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`                        // Retry - the recommended number of retries for the task.
	Strategy        RetryStrategy                  `protobuf:"varint,2,opt,name=strategy,proto3,enum=RetryStrategy" json:"strategy,omitempty"` // Strategy for retrying the task.
	InitMilli       int64                          `protobuf:"varint,3,opt,name=initMilli,proto3" json:"initMilli,omitempty"`                  // InitMilli - initial backoff delay in milliseconds (Static, Linear, Incremental)
	IntervalMilli   int64                          `protobuf:"varint,4,opt,name=intervalMilli,proto3" json:"intervalMilli,omitempty"`          // IntervalMilli - delay interval (Linear) amount to add each attempt (Incremental)
	MaxMilli        int64                          `protobuf:"varint,5,opt,name=maxMilli,proto3" json:"maxMilli,omitempty"`                    // MaxMilli - delay ceiling (Static, Linear, Incremental)
	DefaultExceeded *DefaultRetryExceededBehaviour `protobuf:"bytes,6,opt,name=defaultExceeded,proto3" json:"defaultExceeded,omitempty"`       // DefaultExceeded - specifies what to do by default when the attempts have been exhausted.  This only specifies the strategy, and doesn't contain runtime parameters.
}

func (x *DefaultTaskRetry) Reset() {
	*x = DefaultTaskRetry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultTaskRetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultTaskRetry) ProtoMessage() {}

func (x *DefaultTaskRetry) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultTaskRetry.ProtoReflect.Descriptor instead.
func (*DefaultTaskRetry) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{79}
}

func (x *DefaultTaskRetry) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *DefaultTaskRetry) GetStrategy() RetryStrategy {
	if x != nil {
		return x.Strategy
	}
	return RetryStrategy_Linear
}

func (x *DefaultTaskRetry) GetInitMilli() int64 {
	if x != nil {
		return x.InitMilli
	}
	return 0
}

func (x *DefaultTaskRetry) GetIntervalMilli() int64 {
	if x != nil {
		return x.IntervalMilli
	}
	return 0
}

func (x *DefaultTaskRetry) GetMaxMilli() int64 {
	if x != nil {
		return x.MaxMilli
	}
	return 0
}

func (x *DefaultTaskRetry) GetDefaultExceeded() *DefaultRetryExceededBehaviour {
	if x != nil {
		return x.DefaultExceeded
	}
	return nil
}

type DefaultRetryExceededBehaviour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action        RetryErrorAction `protobuf:"varint,1,opt,name=action,proto3,enum=RetryErrorAction" json:"action,omitempty"` // Action to take when retries are exceeded.
	Variable      string           `protobuf:"bytes,2,opt,name=variable,proto3" json:"variable,omitempty"`                    // Variable - name of variable to set for the SetVariableValue action.
	VariableType  string           `protobuf:"bytes,3,opt,name=variableType,proto3" json:"variableType,omitempty"`            // VariableType - type of the variable "string", "int", "float", "bool" for the SetVariableValue action.
	VariableValue string           `protobuf:"bytes,4,opt,name=variableValue,proto3" json:"variableValue,omitempty"`          // Variable value to set for the SetVariableValue action.
	ErrorCode     string           `protobuf:"bytes,5,opt,name=errorCode,proto3" json:"errorCode,omitempty"`                  // ErrorCode for the ThrowWorkflowError action
}

func (x *DefaultRetryExceededBehaviour) Reset() {
	*x = DefaultRetryExceededBehaviour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultRetryExceededBehaviour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultRetryExceededBehaviour) ProtoMessage() {}

func (x *DefaultRetryExceededBehaviour) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultRetryExceededBehaviour.ProtoReflect.Descriptor instead.
func (*DefaultRetryExceededBehaviour) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{80}
}

func (x *DefaultRetryExceededBehaviour) GetAction() RetryErrorAction {
	if x != nil {
		return x.Action
	}
	return RetryErrorAction_PauseWorkflow
}

func (x *DefaultRetryExceededBehaviour) GetVariable() string {
	if x != nil {
		return x.Variable
	}
	return ""
}

func (x *DefaultRetryExceededBehaviour) GetVariableType() string {
	if x != nil {
		return x.VariableType
	}
	return ""
}

func (x *DefaultRetryExceededBehaviour) GetVariableValue() string {
	if x != nil {
		return x.VariableValue
	}
	return ""
}

func (x *DefaultRetryExceededBehaviour) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

type ParameterGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // Name of the parameter group.
	Short       string `protobuf:"bytes,2,opt,name=short,proto3" json:"short,omitempty"`             // Short description of the parameter groupp.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // Description - a long description of the parameter group.
}

func (x *ParameterGroup) Reset() {
	*x = ParameterGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParameterGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParameterGroup) ProtoMessage() {}

func (x *ParameterGroup) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParameterGroup.ProtoReflect.Descriptor instead.
func (*ParameterGroup) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{81}
}

func (x *ParameterGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ParameterGroup) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *ParameterGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                                           // Name of the parameter.
	Short               string            `protobuf:"bytes,2,opt,name=short,proto3" json:"short,omitempty"`                                                                                                         // Short description of the parameter.
	Description         string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                                             // Description - a long description of the parameter.
	Type                string            `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                                                                                           // Type of the parameter "string", "int", "float", "bool"
	CustomTypeExtension *string           `protobuf:"bytes,5,opt,name=customTypeExtension,proto3,oneof" json:"customTypeExtension,omitempty"`                                                                       // Subtype describing the use of the type "IPAddress" etc.
	Collection          bool              `protobuf:"varint,6,opt,name=collection,proto3" json:"collection,omitempty"`                                                                                              // Collection specifies the parameter is an array.
	Group               *string           `protobuf:"bytes,7,opt,name=group,proto3,oneof" json:"group,omitempty"`                                                                                                   // Group declares this parameter as part of a named parameter group.
	ExtensionData       map[string]string `protobuf:"bytes,8,rep,name=extensionData,proto3" json:"extensionData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // ExtensionData - a map of values that can be used by third party tools.
	Mandatory           bool              `protobuf:"varint,9,opt,name=mandatory,proto3" json:"mandatory,omitempty"`                                                                                                // Mandatory specifies that this parameter is required.
	ValidateExpr        string            `protobuf:"bytes,10,opt,name=validateExpr,proto3" json:"validateExpr,omitempty"`                                                                                          // ValidateExpr - an EXPR that is used to validate the field value.
	Example             string            `protobuf:"bytes,11,opt,name=example,proto3" json:"example,omitempty"`                                                                                                    // Example - an example EXPR that is used to provide a hint to a user on the nature of a task.  It is also used when the task is being used as a mock before implementation.
}

func (x *Parameter) Reset() {
	*x = Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameter) ProtoMessage() {}

func (x *Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameter.ProtoReflect.Descriptor instead.
func (*Parameter) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{82}
}

func (x *Parameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Parameter) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *Parameter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Parameter) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Parameter) GetCustomTypeExtension() string {
	if x != nil && x.CustomTypeExtension != nil {
		return *x.CustomTypeExtension
	}
	return ""
}

func (x *Parameter) GetCollection() bool {
	if x != nil {
		return x.Collection
	}
	return false
}

func (x *Parameter) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *Parameter) GetExtensionData() map[string]string {
	if x != nil {
		return x.ExtensionData
	}
	return nil
}

func (x *Parameter) GetMandatory() bool {
	if x != nil {
		return x.Mandatory
	}
	return false
}

func (x *Parameter) GetValidateExpr() string {
	if x != nil {
		return x.ValidateExpr
	}
	return ""
}

func (x *Parameter) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                     // Message name for a workflow message.
	CorrelationKey string `protobuf:"bytes,2,opt,name=correlationKey,proto3" json:"correlationKey,omitempty"` // CorrelationKey - the workflow message correlation key.
	Short          string `protobuf:"bytes,3,opt,name=short,proto3" json:"short,omitempty"`                   // Short description of the parameter.
	Description    string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`       // Description - a long description of the parameter.
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{83}
}

func (x *Message) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Message) GetCorrelationKey() string {
	if x != nil {
		return x.CorrelationKey
	}
	return ""
}

func (x *Message) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *Message) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Error represents a known error name and code which may be thrown by the state machine.
type TaskError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // Name of the error.
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`               // Code a unique code for the error.
	Short       string `protobuf:"bytes,3,opt,name=short,proto3" json:"short,omitempty"`             // Short description of the parameter.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"` // Description - a long description of the parameter.
}

func (x *TaskError) Reset() {
	*x = TaskError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskError) ProtoMessage() {}

func (x *TaskError) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskError.ProtoReflect.Descriptor instead.
func (*TaskError) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{84}
}

func (x *TaskError) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TaskError) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *TaskError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// RegisterTaskRequest registers a task in SHAR.
type RegisterTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec *TaskSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"` // Spec - the task specification.
}

func (x *RegisterTaskRequest) Reset() {
	*x = RegisterTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTaskRequest) ProtoMessage() {}

func (x *RegisterTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTaskRequest.ProtoReflect.Descriptor instead.
func (*RegisterTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{85}
}

func (x *RegisterTaskRequest) GetSpec() *TaskSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// RegisterTaskResponse contains the UID of a registered task.
type RegisterTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"` // Uid of the registered task.
}

func (x *RegisterTaskResponse) Reset() {
	*x = RegisterTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTaskResponse) ProtoMessage() {}

func (x *RegisterTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTaskResponse.ProtoReflect.Descriptor instead.
func (*RegisterTaskResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{86}
}

func (x *RegisterTaskResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// GetTaskSpecRequest contains the UID of a registered task.
type GetTaskSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"` // Uid of the registered task.
}

func (x *GetTaskSpecRequest) Reset() {
	*x = GetTaskSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskSpecRequest) ProtoMessage() {}

func (x *GetTaskSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskSpecRequest.ProtoReflect.Descriptor instead.
func (*GetTaskSpecRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{87}
}

func (x *GetTaskSpecRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// GetTaskSpecResponse returns a task spec.
type GetTaskSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec *TaskSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"` // Spec - the task specification.
}

func (x *GetTaskSpecResponse) Reset() {
	*x = GetTaskSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskSpecResponse) ProtoMessage() {}

func (x *GetTaskSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskSpecResponse.ProtoReflect.Descriptor instead.
func (*GetTaskSpecResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{88}
}

func (x *GetTaskSpecResponse) GetSpec() *TaskSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// DeleteServiceTaskRequest contains the UID of a registered task.
type DeprecateServiceTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the task specification.
}

func (x *DeprecateServiceTaskRequest) Reset() {
	*x = DeprecateServiceTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeprecateServiceTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeprecateServiceTaskRequest) ProtoMessage() {}

func (x *DeprecateServiceTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeprecateServiceTaskRequest.ProtoReflect.Descriptor instead.
func (*DeprecateServiceTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{89}
}

func (x *DeprecateServiceTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DeleteServiceTaskResponse is the result of unregistering a task.
type DeprecateServiceTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usage   *TaskSpecUsageReport `protobuf:"bytes,1,opt,name=usage,proto3,oneof" json:"usage,omitempty"`
	Success bool                 `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeprecateServiceTaskResponse) Reset() {
	*x = DeprecateServiceTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeprecateServiceTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeprecateServiceTaskResponse) ProtoMessage() {}

func (x *DeprecateServiceTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeprecateServiceTaskResponse.ProtoReflect.Descriptor instead.
func (*DeprecateServiceTaskResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{90}
}

func (x *DeprecateServiceTaskResponse) GetUsage() *TaskSpecUsageReport {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *DeprecateServiceTaskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetTaskSpecVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the task specification.
}

func (x *GetTaskSpecVersionsRequest) Reset() {
	*x = GetTaskSpecVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskSpecVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskSpecVersionsRequest) ProtoMessage() {}

func (x *GetTaskSpecVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskSpecVersionsRequest.ProtoReflect.Descriptor instead.
func (*GetTaskSpecVersionsRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{91}
}

func (x *GetTaskSpecVersionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTaskSpecVersionsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions *TaskSpecVersions `protobuf:"bytes,1,opt,name=versions,proto3" json:"versions,omitempty"`
}

func (x *GetTaskSpecVersionsResult) Reset() {
	*x = GetTaskSpecVersionsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskSpecVersionsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskSpecVersionsResult) ProtoMessage() {}

func (x *GetTaskSpecVersionsResult) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskSpecVersionsResult.ProtoReflect.Descriptor instead.
func (*GetTaskSpecVersionsResult) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{92}
}

func (x *GetTaskSpecVersionsResult) GetVersions() *TaskSpecVersions {
	if x != nil {
		return x.Versions
	}
	return nil
}

type GetTaskSpecUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTaskSpecUsageRequest) Reset() {
	*x = GetTaskSpecUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskSpecUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskSpecUsageRequest) ProtoMessage() {}

func (x *GetTaskSpecUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskSpecUsageRequest.ProtoReflect.Descriptor instead.
func (*GetTaskSpecUsageRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{93}
}

func (x *GetTaskSpecUsageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TaskSpecUsageReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow                 []string `protobuf:"bytes,1,rep,name=Workflow,proto3" json:"Workflow,omitempty"`
	Process                  []string `protobuf:"bytes,2,rep,name=Process,proto3" json:"Process,omitempty"`
	ExecutingWorkflow        []string `protobuf:"bytes,3,rep,name=ExecutingWorkflow,proto3" json:"ExecutingWorkflow,omitempty"`
	ExecutingProcessInstance []string `protobuf:"bytes,4,rep,name=ExecutingProcessInstance,proto3" json:"ExecutingProcessInstance,omitempty"`
}

func (x *TaskSpecUsageReport) Reset() {
	*x = TaskSpecUsageReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskSpecUsageReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSpecUsageReport) ProtoMessage() {}

func (x *TaskSpecUsageReport) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSpecUsageReport.ProtoReflect.Descriptor instead.
func (*TaskSpecUsageReport) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{94}
}

func (x *TaskSpecUsageReport) GetWorkflow() []string {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *TaskSpecUsageReport) GetProcess() []string {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *TaskSpecUsageReport) GetExecutingWorkflow() []string {
	if x != nil {
		return x.ExecutingWorkflow
	}
	return nil
}

func (x *TaskSpecUsageReport) GetExecutingProcessInstance() []string {
	if x != nil {
		return x.ExecutingProcessInstance
	}
	return nil
}

var File_shar_workflow_models_proto protoreflect.FileDescriptor

var file_shar_workflow_models_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x68, 0x61, 0x72, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x02, 0x0a,
	0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x24, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x7a, 0x69, 0x70, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x67, 0x7a, 0x69, 0x70, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x44, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x6f, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x6f,
	0x77, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6c,
	0x6f, 0x77, 0x22, 0x3b, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22,
	0x53, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x22, 0x7c, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3e,
	0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x51,
	0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xd2, 0x07, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44,
	0x0a, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x47, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2e, 0x0a,
	0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x0d, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x0d, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x70, 0x65, 0x63, 0x48, 0x00, 0x52, 0x07, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x49, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x09, 0x69, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x79, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x48, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x79, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x75, 0x72, 0x88, 0x01, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x22, 0xd6, 0x01, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x19, 0x0a, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x07, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x22,
	0x4c, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x22, 0xb2, 0x01,
	0x0a, 0x0b, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x20, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x2f, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x72, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x72, 0x6f, 0x63,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x78, 0x65, 0x64, 0x45, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x11, 0x66, 0x69, 0x78, 0x65, 0x64, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xd6, 0x01, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x45, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x42, 0x0a, 0x14, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50, 0x0a, 0x06, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x3f, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xde,
	0x01, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x4a, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x61, 0x74, 0x63, 0x68,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x42, 0x0a, 0x14, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x50, 0x0a, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0xfe, 0x07, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x69,
	0x78, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x24, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x71, 0x0a, 0x1b, 0x73, 0x61, 0x74,
	0x69, 0x73, 0x66, 0x69, 0x65, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53,
	0x61, 0x74, 0x69, 0x73, 0x66, 0x69, 0x65, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x1b, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x69, 0x65, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x13,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x13, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x61, 0x0a, 0x20, 0x53, 0x61, 0x74, 0x69, 0x73,
	0x66, 0x69, 0x65, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53,
	0x61, 0x74, 0x69, 0x73, 0x66, 0x69, 0x65, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5c, 0x0a, 0x18, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xd8, 0x03, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x69,
	0x78, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72,
	0x73, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x24, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcd, 0x04,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x04, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76,
	0x61, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x48, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x06, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x22, 0x3a, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x28, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x61, 0x74,
	0x69, 0x73, 0x66, 0x69, 0x65, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x2a, 0x0a,
	0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x3b, 0x0a, 0x13, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x12, 0x47, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6d, 0x65, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x76,
	0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x76, 0x69, 0x73, 0x69, 0x74, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x4d, 0x65, 0x74, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8f, 0x01, 0x0a, 0x17,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x72, 0x6f, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x43, 0x0a,
	0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x69, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x22, 0xe2, 0x03, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x42, 0x0a,
	0x14, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x0f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x6e, 0x0a, 0x10,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f,
	0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x1b, 0x0a, 0x09,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x17, 0x41, 0x70,
	0x69, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x52, 0x0a, 0x18, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x18, 0x41,
	0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x41, 0x70, 0x69, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55, 0x0a, 0x19, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x3f, 0x0a, 0x15,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x58, 0x0a,
	0x16, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x1c, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x2f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x4c, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x31,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x54, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3f, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x14, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x44, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x64, 0x0a,
	0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76,
	0x61, 0x72, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x18, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4f, 0x0a, 0x19,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x50, 0x0a,
	0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76,
	0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22,
	0x50, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72,
	0x73, 0x22, 0x63, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x2c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x22, 0x95, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76,
	0x61, 0x72, 0x73, 0x22, 0x37, 0x0a, 0x1b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x22, 0x30, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x24, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x40, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x22, 0x47, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x56, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x49,
	0x64, 0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69,
	0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x22, 0x87, 0x01, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x0e, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x1a,
	0x4a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x88, 0x02, 0x0a, 0x11,
	0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0a, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x22, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70,
	0x65, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe7, 0x01, 0x0a, 0x08, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x2c, 0x0a, 0x09, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x75, 0x72, 0x52, 0x09, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x12, 0x2f,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x23, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xdc, 0x02, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x4d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61,
	0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0d, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x40, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8f, 0x01, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x20, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x22, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4e, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x22, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x75, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x80, 0x02, 0x0a, 0x10, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x12, 0x48, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x78,
	0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x74, 0x72, 0x79, 0x45, 0x78, 0x63, 0x65, 0x65,
	0x64, 0x65, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x52, 0x0f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x22, 0xce, 0x01,
	0x0a, 0x1d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x74, 0x72, 0x79, 0x45, 0x78,
	0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x12,
	0x29, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5c,
	0x0a, 0x0e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe2, 0x03, 0x0a,
	0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x13, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0d,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x70, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x40, 0x0a,
	0x12, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0x7d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x6b, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a,
	0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x22, 0x28, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x26, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x31, 0x0a, 0x1b, 0x44,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x73,
	0x0a, 0x1c, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70,
	0x65, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x70, 0x65, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb5, 0x01, 0x0a,
	0x13, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x3a, 0x0a, 0x18, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2a, 0x2d, 0x0a, 0x0d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65,
	0x6c, 0x10, 0x02, 0x2a, 0x39, 0x0a, 0x0b, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x10, 0x02, 0x2a, 0x31,
	0x0a, 0x10, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x64, 0x69, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x10,
	0x01, 0x2a, 0xa3, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x03, 0x12, 0x13, 0x0a,
	0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x10, 0x06, 0x2a, 0x2c, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x10, 0x01, 0x2a, 0x18, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x10, 0x00, 0x2a,
	0x5c, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x04, 0x2a, 0x5e, 0x0a,
	0x09, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x6c, 0x6f,
	0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x6c,
	0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x10, 0x04, 0x2a, 0x2c, 0x0a,
	0x0d, 0x52, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x0a,
	0x0a, 0x06, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x10, 0x01, 0x2a, 0x65, 0x0a, 0x10, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x11, 0x0a, 0x0d, 0x50, 0x61, 0x75, 0x73, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x68, 0x72, 0x6f, 0x77, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x46, 0x61, 0x69, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x10, 0x03, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x73,
	0x68, 0x61, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_shar_workflow_models_proto_rawDescOnce sync.Once
	file_shar_workflow_models_proto_rawDescData = file_shar_workflow_models_proto_rawDesc
)

func file_shar_workflow_models_proto_rawDescGZIP() []byte {
	file_shar_workflow_models_proto_rawDescOnce.Do(func() {
		file_shar_workflow_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_shar_workflow_models_proto_rawDescData)
	})
	return file_shar_workflow_models_proto_rawDescData
}

var file_shar_workflow_models_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_shar_workflow_models_proto_msgTypes = make([]protoimpl.MessageInfo, 110)
var file_shar_workflow_models_proto_goTypes = []interface{}{
	(ThreadingType)(0),                      // 0: ThreadingType
	(GatewayType)(0),                        // 1: GatewayType
	(GatewayDirection)(0),                   // 2: GatewayDirection
	(ProcessHistoryType)(0),                 // 3: ProcessHistoryType
	(WorkflowTimerType)(0),                  // 4: WorkflowTimerType
	(RecipientType)(0),                      // 5: RecipientType
	(CancellationState)(0),                  // 6: CancellationState
	(LogSource)(0),                          // 7: LogSource
	(RetryStrategy)(0),                      // 8: RetryStrategy
	(RetryErrorAction)(0),                   // 9: RetryErrorAction
	(*Workflow)(nil),                        // 10: Workflow
	(*Collaboration)(nil),                   // 11: Collaboration
	(*Participant)(nil),                     // 12: Participant
	(*MessageFlow)(nil),                     // 13: MessageFlow
	(*Metadata)(nil),                        // 14: Metadata
	(*Process)(nil),                         // 15: Process
	(*WorkflowVersions)(nil),                // 16: WorkflowVersions
	(*WorkflowVersion)(nil),                 // 17: WorkflowVersion
	(*Element)(nil),                         // 18: Element
	(*Iteration)(nil),                       // 19: Iteration
	(*Iterator)(nil),                        // 20: Iterator
	(*GatewaySpec)(nil),                     // 21: GatewaySpec
	(*Timer)(nil),                           // 22: Timer
	(*Target)(nil),                          // 23: Target
	(*Error)(nil),                           // 24: Error
	(*CatchError)(nil),                      // 25: CatchError
	(*Targets)(nil),                         // 26: Targets
	(*WorkflowState)(nil),                   // 27: WorkflowState
	(*WorkflowStateSummary)(nil),            // 28: WorkflowStateSummary
	(*ProcessHistoryEntry)(nil),             // 29: ProcessHistoryEntry
	(*ProcessHistory)(nil),                  // 30: ProcessHistory
	(*SatisfiesGateway)(nil),                // 31: SatisfiesGateway
	(*GatewayExpectations)(nil),             // 32: GatewayExpectations
	(*Gateway)(nil),                         // 33: Gateway
	(*WorkflowTimerDefinition)(nil),         // 34: WorkflowTimerDefinition
	(*WorkflowTimer)(nil),                   // 35: WorkflowTimer
	(*Execution)(nil),                       // 36: Execution
	(*ProcessInstance)(nil),                 // 37: ProcessInstance
	(*MessageInstance)(nil),                 // 38: MessageInstance
	(*MessageRecipient)(nil),                // 39: MessageRecipient
	(*UserTasks)(nil),                       // 40: UserTasks
	(*ApiAuthorizationRequest)(nil),         // 41: ApiAuthorizationRequest
	(*ApiAuthorizationResponse)(nil),        // 42: ApiAuthorizationResponse
	(*ApiAuthenticationRequest)(nil),        // 43: ApiAuthenticationRequest
	(*ApiAuthenticationResponse)(nil),       // 44: ApiAuthenticationResponse
	(*LaunchWorkflowRequest)(nil),           // 45: LaunchWorkflowRequest
	(*LaunchWorkflowResponse)(nil),          // 46: LaunchWorkflowResponse
	(*CancelProcessInstanceRequest)(nil),    // 47: CancelProcessInstanceRequest
	(*ListExecutionProcessesRequest)(nil),   // 48: ListExecutionProcessesRequest
	(*ListExecutionProcessesResult)(nil),    // 49: ListExecutionProcessesResult
	(*GetProcessInstanceStatusRequest)(nil), // 50: GetProcessInstanceStatusRequest
	(*GetProcessInstanceStatusResult)(nil),  // 51: GetProcessInstanceStatusResult
	(*ListExecutionRequest)(nil),            // 52: ListExecutionRequest
	(*ListExecutionResponse)(nil),           // 53: ListExecutionResponse
	(*ListExecutionResult)(nil),             // 54: ListExecutionResult
	(*WorkflowInstanceInfo)(nil),            // 55: WorkflowInstanceInfo
	(*WorkflowInstanceStatus)(nil),          // 56: WorkflowInstanceStatus
	(*ListWorkflowsResponse)(nil),           // 57: ListWorkflowsResponse
	(*ListWorkflowResult)(nil),              // 58: ListWorkflowResult
	(*SendMessageRequest)(nil),              // 59: SendMessageRequest
	(*WorkflowInstanceComplete)(nil),        // 60: WorkflowInstanceComplete
	(*CompleteManualTaskRequest)(nil),       // 61: CompleteManualTaskRequest
	(*CompleteServiceTaskRequest)(nil),      // 62: CompleteServiceTaskRequest
	(*CompleteSendMessageRequest)(nil),      // 63: CompleteSendMessageRequest
	(*CompleteUserTaskRequest)(nil),         // 64: CompleteUserTaskRequest
	(*ListUserTasksRequest)(nil),            // 65: ListUserTasksRequest
	(*GetUserTaskRequest)(nil),              // 66: GetUserTaskRequest
	(*GetUserTaskResponse)(nil),             // 67: GetUserTaskResponse
	(*HandleWorkflowErrorRequest)(nil),      // 68: HandleWorkflowErrorRequest
	(*HandleWorkflowErrorResponse)(nil),     // 69: HandleWorkflowErrorResponse
	(*GetWorkflowVersionsRequest)(nil),      // 70: GetWorkflowVersionsRequest
	(*GetWorkflowVersionsResponse)(nil),     // 71: GetWorkflowVersionsResponse
	(*GetWorkflowRequest)(nil),              // 72: GetWorkflowRequest
	(*GetWorkflowResponse)(nil),             // 73: GetWorkflowResponse
	(*GetProcessHistoryRequest)(nil),        // 74: GetProcessHistoryRequest
	(*GetProcessHistoryResponse)(nil),       // 75: GetProcessHistoryResponse
	(*GetServiceTaskRoutingIDRequest)(nil),  // 76: GetServiceTaskRoutingIDRequest
	(*GetServiceTaskRoutingIDResponse)(nil), // 77: GetServiceTaskRoutingIDResponse
	(*GetVersionInfoRequest)(nil),           // 78: GetVersionInfoRequest
	(*GetVersionInfoResponse)(nil),          // 79: GetVersionInfoResponse
	(*WorkflowStats)(nil),                   // 80: WorkflowStats
	(*TelemetryState)(nil),                  // 81: TelemetryState
	(*TelemetryLogEntry)(nil),               // 82: TelemetryLogEntry
	(*TaskSpecVersions)(nil),                // 83: TaskSpecVersions
	(*TaskSpec)(nil),                        // 84: TaskSpec
	(*TaskMetadata)(nil),                    // 85: TaskMetadata
	(*TaskParameters)(nil),                  // 86: TaskParameters
	(*TaskEvents)(nil),                      // 87: TaskEvents
	(*TaskBehaviour)(nil),                   // 88: TaskBehaviour
	(*DefaultTaskRetry)(nil),                // 89: DefaultTaskRetry
	(*DefaultRetryExceededBehaviour)(nil),   // 90: DefaultRetryExceededBehaviour
	(*ParameterGroup)(nil),                  // 91: ParameterGroup
	(*Parameter)(nil),                       // 92: Parameter
	(*Message)(nil),                         // 93: Message
	(*TaskError)(nil),                       // 94: TaskError
	(*RegisterTaskRequest)(nil),             // 95: RegisterTaskRequest
	(*RegisterTaskResponse)(nil),            // 96: RegisterTaskResponse
	(*GetTaskSpecRequest)(nil),              // 97: GetTaskSpecRequest
	(*GetTaskSpecResponse)(nil),             // 98: GetTaskSpecResponse
	(*DeprecateServiceTaskRequest)(nil),     // 99: DeprecateServiceTaskRequest
	(*DeprecateServiceTaskResponse)(nil),    // 100: DeprecateServiceTaskResponse
	(*GetTaskSpecVersionsRequest)(nil),      // 101: GetTaskSpecVersionsRequest
	(*GetTaskSpecVersionsResult)(nil),       // 102: GetTaskSpecVersionsResult
	(*GetTaskSpecUsageRequest)(nil),         // 103: GetTaskSpecUsageRequest
	(*TaskSpecUsageReport)(nil),             // 104: TaskSpecUsageReport
	nil,                                     // 105: Workflow.ProcessEntry
	nil,                                     // 106: Element.InputTransformEntry
	nil,                                     // 107: Element.OutputTransformEntry
	nil,                                     // 108: Timer.OutputTransformEntry
	nil,                                     // 109: CatchError.OutputTransformEntry
	nil,                                     // 110: WorkflowState.SatisfiesGatewayExpectationEntry
	nil,                                     // 111: WorkflowState.GatewayExpectationsEntry
	nil,                                     // 112: Gateway.MetExpectationsEntry
	nil,                                     // 113: ProcessInstance.GatewayCompleteEntry
	nil,                                     // 114: ApiAuthorizationRequest.HeadersEntry
	nil,                                     // 115: ApiAuthenticationRequest.HeadersEntry
	nil,                                     // 116: TelemetryState.LogEntry
	nil,                                     // 117: TelemetryLogEntry.AttributesEntry
	nil,                                     // 118: TaskMetadata.ExtensionDataEntry
	nil,                                     // 119: Parameter.ExtensionDataEntry
}
var file_shar_workflow_models_proto_depIdxs = []int32{
	105, // 0: Workflow.process:type_name -> Workflow.ProcessEntry
	18,  // 1: Workflow.messages:type_name -> Element
	24,  // 2: Workflow.errors:type_name -> Error
	11,  // 3: Workflow.collaboration:type_name -> Collaboration
	12,  // 4: Collaboration.participant:type_name -> Participant
	13,  // 5: Collaboration.messageFlow:type_name -> MessageFlow
	18,  // 6: Process.elements:type_name -> Element
	14,  // 7: Process.metadata:type_name -> Metadata
	17,  // 8: WorkflowVersions.version:type_name -> WorkflowVersion
	26,  // 9: Element.outbound:type_name -> Targets
	15,  // 10: Element.process:type_name -> Process
	25,  // 11: Element.errors:type_name -> CatchError
	24,  // 12: Element.error:type_name -> Error
	106, // 13: Element.inputTransform:type_name -> Element.InputTransformEntry
	107, // 14: Element.outputTransform:type_name -> Element.OutputTransformEntry
	34,  // 15: Element.timer:type_name -> WorkflowTimerDefinition
	22,  // 16: Element.boundaryTimer:type_name -> Timer
	21,  // 17: Element.gateway:type_name -> GatewaySpec
	19,  // 18: Element.iteration:type_name -> Iteration
	89,  // 19: Element.retryBehaviour:type_name -> DefaultTaskRetry
	0,   // 20: Iteration.execute:type_name -> ThreadingType
	1,   // 21: GatewaySpec.type:type_name -> GatewayType
	2,   // 22: GatewaySpec.direction:type_name -> GatewayDirection
	108, // 23: Timer.outputTransform:type_name -> Timer.OutputTransformEntry
	109, // 24: CatchError.outputTransform:type_name -> CatchError.OutputTransformEntry
	23,  // 25: Targets.target:type_name -> Target
	6,   // 26: WorkflowState.state:type_name -> CancellationState
	24,  // 27: WorkflowState.error:type_name -> Error
	35,  // 28: WorkflowState.timer:type_name -> WorkflowTimer
	110, // 29: WorkflowState.satisfiesGatewayExpectation:type_name -> WorkflowState.SatisfiesGatewayExpectationEntry
	111, // 30: WorkflowState.gatewayExpectations:type_name -> WorkflowState.GatewayExpectationsEntry
	6,   // 31: WorkflowStateSummary.state:type_name -> CancellationState
	24,  // 32: WorkflowStateSummary.error:type_name -> Error
	35,  // 33: WorkflowStateSummary.timer:type_name -> WorkflowTimer
	3,   // 34: ProcessHistoryEntry.itemType:type_name -> ProcessHistoryType
	6,   // 35: ProcessHistoryEntry.cancellationState:type_name -> CancellationState
	35,  // 36: ProcessHistoryEntry.timer:type_name -> WorkflowTimer
	24,  // 37: ProcessHistoryEntry.error:type_name -> Error
	29,  // 38: ProcessHistory.item:type_name -> ProcessHistoryEntry
	112, // 39: Gateway.metExpectations:type_name -> Gateway.MetExpectationsEntry
	4,   // 40: WorkflowTimerDefinition.type:type_name -> WorkflowTimerType
	113, // 41: ProcessInstance.gatewayComplete:type_name -> ProcessInstance.GatewayCompleteEntry
	5,   // 42: MessageRecipient.type:type_name -> RecipientType
	114, // 43: ApiAuthorizationRequest.Headers:type_name -> ApiAuthorizationRequest.HeadersEntry
	115, // 44: ApiAuthenticationRequest.headers:type_name -> ApiAuthenticationRequest.HeadersEntry
	6,   // 45: CancelProcessInstanceRequest.state:type_name -> CancellationState
	24,  // 46: CancelProcessInstanceRequest.error:type_name -> Error
	27,  // 47: GetProcessInstanceStatusResult.processState:type_name -> WorkflowState
	54,  // 48: ListExecutionResponse.result:type_name -> ListExecutionResult
	27,  // 49: WorkflowInstanceStatus.state:type_name -> WorkflowState
	58,  // 50: ListWorkflowsResponse.result:type_name -> ListWorkflowResult
	6,   // 51: WorkflowInstanceComplete.workflowState:type_name -> CancellationState
	24,  // 52: WorkflowInstanceComplete.error:type_name -> Error
	16,  // 53: GetWorkflowVersionsResponse.versions:type_name -> WorkflowVersions
	10,  // 54: GetWorkflowResponse.definition:type_name -> Workflow
	29,  // 55: GetProcessHistoryResponse.entry:type_name -> ProcessHistoryEntry
	27,  // 56: TelemetryState.state:type_name -> WorkflowState
	116, // 57: TelemetryState.log:type_name -> TelemetryState.LogEntry
	7,   // 58: TelemetryLogEntry.source:type_name -> LogSource
	117, // 59: TelemetryLogEntry.attributes:type_name -> TelemetryLogEntry.AttributesEntry
	85,  // 60: TaskSpec.metadata:type_name -> TaskMetadata
	88,  // 61: TaskSpec.behaviour:type_name -> TaskBehaviour
	86,  // 62: TaskSpec.parameters:type_name -> TaskParameters
	87,  // 63: TaskSpec.events:type_name -> TaskEvents
	118, // 64: TaskMetadata.extensionData:type_name -> TaskMetadata.ExtensionDataEntry
	91,  // 65: TaskParameters.parameterGroup:type_name -> ParameterGroup
	92,  // 66: TaskParameters.input:type_name -> Parameter
	92,  // 67: TaskParameters.output:type_name -> Parameter
	24,  // 68: TaskEvents.error:type_name -> Error
	93,  // 69: TaskEvents.Message:type_name -> Message
	89,  // 70: TaskBehaviour.defaultRetry:type_name -> DefaultTaskRetry
	8,   // 71: DefaultTaskRetry.strategy:type_name -> RetryStrategy
	90,  // 72: DefaultTaskRetry.defaultExceeded:type_name -> DefaultRetryExceededBehaviour
	9,   // 73: DefaultRetryExceededBehaviour.action:type_name -> RetryErrorAction
	119, // 74: Parameter.extensionData:type_name -> Parameter.ExtensionDataEntry
	84,  // 75: RegisterTaskRequest.spec:type_name -> TaskSpec
	84,  // 76: GetTaskSpecResponse.spec:type_name -> TaskSpec
	104, // 77: DeprecateServiceTaskResponse.usage:type_name -> TaskSpecUsageReport
	83,  // 78: GetTaskSpecVersionsResult.versions:type_name -> TaskSpecVersions
	15,  // 79: Workflow.ProcessEntry.value:type_name -> Process
	31,  // 80: WorkflowState.SatisfiesGatewayExpectationEntry.value:type_name -> SatisfiesGateway
	32,  // 81: WorkflowState.GatewayExpectationsEntry.value:type_name -> GatewayExpectations
	82,  // 82: TelemetryState.LogEntry.value:type_name -> TelemetryLogEntry
	83,  // [83:83] is the sub-list for method output_type
	83,  // [83:83] is the sub-list for method input_type
	83,  // [83:83] is the sub-list for extension type_name
	83,  // [83:83] is the sub-list for extension extendee
	0,   // [0:83] is the sub-list for field type_name
}

func init() { file_shar_workflow_models_proto_init() }
func file_shar_workflow_models_proto_init() {
	if File_shar_workflow_models_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shar_workflow_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workflow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collaboration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Iteration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Iterator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewaySpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatchError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Targets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowStateSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessHistoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SatisfiesGateway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayExpectations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gateway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowTimerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowTimer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRecipient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAuthorizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAuthorizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAuthenticationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAuthenticationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelProcessInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExecutionProcessesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExecutionProcessesResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessInstanceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessInstanceStatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExecutionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInstanceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInstanceComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteManualTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteServiceTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteSendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteUserTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWorkflowErrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWorkflowErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceTaskRoutingIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceTaskRoutingIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryLogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskSpecVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskBehaviour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultTaskRetry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultRetryExceededBehaviour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParameterGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeprecateServiceTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeprecateServiceTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskSpecVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskSpecVersionsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskSpecUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskSpecUsageReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_shar_workflow_models_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[82].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[90].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shar_workflow_models_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   110,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shar_workflow_models_proto_goTypes,
		DependencyIndexes: file_shar_workflow_models_proto_depIdxs,
		EnumInfos:         file_shar_workflow_models_proto_enumTypes,
		MessageInfos:      file_shar_workflow_models_proto_msgTypes,
	}.Build()
	File_shar_workflow_models_proto = out.File
	file_shar_workflow_models_proto_rawDesc = nil
	file_shar_workflow_models_proto_goTypes = nil
	file_shar_workflow_models_proto_depIdxs = nil
}
