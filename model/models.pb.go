// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.2
// source: shar-workflow/models.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// WorkflowTimerType describes whether a timer is relative or absolute
type WorkflowTimerType int32

const (
	WorkflowTimerType_duration WorkflowTimerType = 0 // Duration - a relative timer
	WorkflowTimerType_fixed    WorkflowTimerType = 1 // Fixed - an absolute timer
)

// Enum value maps for WorkflowTimerType.
var (
	WorkflowTimerType_name = map[int32]string{
		0: "duration",
		1: "fixed",
	}
	WorkflowTimerType_value = map[string]int32{
		"duration": 0,
		"fixed":    1,
	}
)

func (x WorkflowTimerType) Enum() *WorkflowTimerType {
	p := new(WorkflowTimerType)
	*p = x
	return p
}

func (x WorkflowTimerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowTimerType) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[0].Descriptor()
}

func (WorkflowTimerType) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[0]
}

func (x WorkflowTimerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowTimerType.Descriptor instead.
func (WorkflowTimerType) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{0}
}

type CancellationState int32

const (
	CancellationState_executing  CancellationState = 0 // CancellationState_executing - the state machine is executing
	CancellationState_completed  CancellationState = 1 // CancellationState_completed - the state machine has completed successfully
	CancellationState_terminated CancellationState = 2 // CancellationState_terminated - the state machine instance was terminated
	CancellationState_errored    CancellationState = 3 // CancellationState_errored - an error occured during state machine execution
	CancellationState_obsolete   CancellationState = 4 // CancellationState_obsolete - this state is obsolete due to an alternate flow
)

// Enum value maps for CancellationState.
var (
	CancellationState_name = map[int32]string{
		0: "executing",
		1: "completed",
		2: "terminated",
		3: "errored",
		4: "obsolete",
	}
	CancellationState_value = map[string]int32{
		"executing":  0,
		"completed":  1,
		"terminated": 2,
		"errored":    3,
		"obsolete":   4,
	}
)

func (x CancellationState) Enum() *CancellationState {
	p := new(CancellationState)
	*p = x
	return p
}

func (x CancellationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancellationState) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[1].Descriptor()
}

func (CancellationState) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[1]
}

func (x CancellationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancellationState.Descriptor instead.
func (CancellationState) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{1}
}

type LogSource int32

const (
	LogSource_logSourceEngine   LogSource = 0
	LogSource_logSourceWorkflow LogSource = 2
	LogSource_logSourceClient   LogSource = 3
	LogSource_logSourceJob      LogSource = 4
)

// Enum value maps for LogSource.
var (
	LogSource_name = map[int32]string{
		0: "logSourceEngine",
		2: "logSourceWorkflow",
		3: "logSourceClient",
		4: "logSourceJob",
	}
	LogSource_value = map[string]int32{
		"logSourceEngine":   0,
		"logSourceWorkflow": 2,
		"logSourceClient":   3,
		"logSourceJob":      4,
	}
)

func (x LogSource) Enum() *LogSource {
	p := new(LogSource)
	*p = x
	return p
}

func (x LogSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogSource) Descriptor() protoreflect.EnumDescriptor {
	return file_shar_workflow_models_proto_enumTypes[2].Descriptor()
}

func (LogSource) Type() protoreflect.EnumType {
	return &file_shar_workflow_models_proto_enumTypes[2]
}

func (x LogSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogSource.Descriptor instead.
func (LogSource) EnumDescriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{2}
}

// Workflow describes a number of processes that interact together.  It also contains all messages and errors used by the processes.
type Workflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                               // Name defines the common name that describes the workflow.
	Process    map[string]*Process `protobuf:"bytes,2,rep,name=process,proto3" json:"process,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Process is a map of process names to workflow state machines.
	Messages   []*Element          `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`                                                                                       // Messages define the messages that can be sent by the workflow.
	Errors     []*Error            `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`                                                                                           // Errors define the errors used by the workflow.
	GzipSource []byte              `protobuf:"bytes,5,opt,name=gzipSource,proto3" json:"gzipSource,omitempty"`                                                                                   // Source for round tripping.
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{0}
}

func (x *Workflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workflow) GetProcess() map[string]*Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *Workflow) GetMessages() []*Element {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Workflow) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *Workflow) GetGzipSource() []byte {
	if x != nil {
		return x.GzipSource
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimedStart bool `protobuf:"varint,1,opt,name=timedStart,proto3" json:"timedStart,omitempty"` // Workflow contains timed start activities that can trigger a process.
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetTimedStart() bool {
	if x != nil {
		return x.TimedStart
	}
	return false
}

// Process describes a single workflow state machine.
type Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*Element `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`       // Elements describes each state in the state machine.
	Name     string     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`               // Name - the common name of the state machine.
	Metadata *Metadata  `protobuf:"bytes,6,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"` // Metadata created by SHAR to describe process behavior.
}

func (x *Process) Reset() {
	*x = Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{2}
}

func (x *Process) GetElements() []*Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *Process) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Process) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// WorkflowVersions describes the version history.
type WorkflowVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version []*WorkflowVersion `protobuf:"bytes,1,rep,name=version,proto3" json:"version,omitempty"` // WorkflowVersion - a single version of a workflow
}

func (x *WorkflowVersions) Reset() {
	*x = WorkflowVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowVersions) ProtoMessage() {}

func (x *WorkflowVersions) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowVersions.ProtoReflect.Descriptor instead.
func (*WorkflowVersions) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{3}
}

func (x *WorkflowVersions) GetVersion() []*WorkflowVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

// WorkflowVersion contains the metadata for a single workflow version
type WorkflowVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`          // Id - the launchable ID for the workflow.
	Sha256 []byte `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`  // Sha256 - the hash of the workflow configuration.
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"` // Number - the version number of the workflow
}

func (x *WorkflowVersion) Reset() {
	*x = WorkflowVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowVersion) ProtoMessage() {}

func (x *WorkflowVersion) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowVersion.ProtoReflect.Descriptor instead.
func (*WorkflowVersion) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{4}
}

func (x *WorkflowVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowVersion) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

func (x *WorkflowVersion) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

// Element describes a single state machine state.
type Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                                    // Id - the unique identifier for the workflow state machine element.
	Name            string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                                                // Name - the name of the state machine element.
	Type            string                   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                                                                                                                // Type - the type of state machine element
	Documentation   string                   `protobuf:"bytes,4,opt,name=documentation,proto3" json:"documentation,omitempty"`                                                                                              // Documentation - any documentation describing the state machine element.
	Execute         string                   `protobuf:"bytes,5,opt,name=execute,proto3" json:"execute,omitempty"`                                                                                                          // Execute - describes the execution parameter,  This is used for diffrerent purposes depending on the type.
	Outbound        *Targets                 `protobuf:"bytes,6,opt,name=outbound,proto3" json:"outbound,omitempty"`                                                                                                        // Outbound - a number of possible transitions to other state machine state elements.s
	Process         *Process                 `protobuf:"bytes,7,opt,name=process,proto3" json:"process,omitempty"`                                                                                                          // Process - defines any subprocesses contained within this state machine.
	Msg             string                   `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`                                                                                                                  // TODO: Document
	Retries         string                   `protobuf:"bytes,9,opt,name=retries,proto3" json:"retries,omitempty"`                                                                                                          // Retries - how many times this state machine element should retry in the case of a non-workflow error.
	Candidates      string                   `protobuf:"bytes,10,opt,name=candidates,proto3" json:"candidates,omitempty"`                                                                                                   // Candidates - used for user related state machgine types to define users that may complete the task.
	CandidateGroups string                   `protobuf:"bytes,11,opt,name=candidateGroups,proto3" json:"candidateGroups,omitempty"`                                                                                         // CandidateGroups - used for user related state machine types to define groups that may complete a task.
	Errors          []*CatchError            `protobuf:"bytes,12,rep,name=errors,proto3" json:"errors,omitempty"`                                                                                                           // Errors - a number of catchable errors for this state machine element.
	Error           *Error                   `protobuf:"bytes,13,opt,name=error,proto3" json:"error,omitempty"`                                                                                                             // Error - an error that may be thrown.
	InputTransform  map[string]string        `protobuf:"bytes,14,rep,name=inputTransform,proto3" json:"inputTransform,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`   // InputTransform - a transformation to poerform between variable names when calling a state machine task.
	OutputTransform map[string]string        `protobuf:"bytes,15,rep,name=outputTransform,proto3" json:"outputTransform,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // OutputTransform - a transformation to poerform between variable names when exiting a state machine task.
	Timer           *WorkflowTimerDefinition `protobuf:"bytes,16,opt,name=timer,proto3" json:"timer,omitempty"`                                                                                                             // Timer - a time to wait before execution for timer tasks.
	BoundaryTimer   []*Timer                 `protobuf:"bytes,17,rep,name=boundaryTimer,proto3" json:"boundaryTimer,omitempty"`                                                                                             // BoundaryTimer - a number of timed transitions between this and another state.
}

func (x *Element) Reset() {
	*x = Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element) ProtoMessage() {}

func (x *Element) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element.ProtoReflect.Descriptor instead.
func (*Element) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{5}
}

func (x *Element) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Element) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Element) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Element) GetDocumentation() string {
	if x != nil {
		return x.Documentation
	}
	return ""
}

func (x *Element) GetExecute() string {
	if x != nil {
		return x.Execute
	}
	return ""
}

func (x *Element) GetOutbound() *Targets {
	if x != nil {
		return x.Outbound
	}
	return nil
}

func (x *Element) GetProcess() *Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *Element) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Element) GetRetries() string {
	if x != nil {
		return x.Retries
	}
	return ""
}

func (x *Element) GetCandidates() string {
	if x != nil {
		return x.Candidates
	}
	return ""
}

func (x *Element) GetCandidateGroups() string {
	if x != nil {
		return x.CandidateGroups
	}
	return ""
}

func (x *Element) GetErrors() []*CatchError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *Element) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Element) GetInputTransform() map[string]string {
	if x != nil {
		return x.InputTransform
	}
	return nil
}

func (x *Element) GetOutputTransform() map[string]string {
	if x != nil {
		return x.OutputTransform
	}
	return nil
}

func (x *Element) GetTimer() *WorkflowTimerDefinition {
	if x != nil {
		return x.Timer
	}
	return nil
}

func (x *Element) GetBoundaryTimer() []*Timer {
	if x != nil {
		return x.BoundaryTimer
	}
	return nil
}

// Timer specifies a timed transition to another state.
type Timer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                                   // Id - the unique identifier for the timer.
	Duration        string            `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                       // Duration - the duration of the timer.
	Target          string            `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`                                                                                                           // Target - state machine element ID to transition to.
	OutputTransform map[string]string `protobuf:"bytes,4,rep,name=outputTransform,proto3" json:"outputTransform,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // OutputTransform - The transformation to apply to variables during the transition.
}

func (x *Timer) Reset() {
	*x = Timer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timer) ProtoMessage() {}

func (x *Timer) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timer.ProtoReflect.Descriptor instead.
func (*Timer) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{6}
}

func (x *Timer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Timer) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Timer) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Timer) GetOutputTransform() map[string]string {
	if x != nil {
		return x.OutputTransform
	}
	return nil
}

// Target specifies the target for a state transition.
type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                 // Id for the transition.
	Conditions []string `protobuf:"bytes,2,rep,name=conditions,proto3" json:"conditions,omitempty"` // Conditions -to apply to the transition specified as Expr.
	Target     string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`         // Target ID for the transition.
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{7}
}

func (x *Target) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Target) GetConditions() []string {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Target) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// Error represents a known error name and code which may be thrown by the state machine.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // Id - the unique id for the error.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Name - the error unique name.
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` // Code - the unique code for the error.
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{8}
}

func (x *Error) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Error) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// CatchError specifies an error transition to another state.
type CatchError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                                   // Id - the unique id.
	ErrorId         string            `protobuf:"bytes,2,opt,name=errorId,proto3" json:"errorId,omitempty"`                                                                                                         // Id - the id of the error.
	Target          string            `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`                                                                                                           // Target ID for the transition.
	OutputTransform map[string]string `protobuf:"bytes,4,rep,name=outputTransform,proto3" json:"outputTransform,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // OutputTransform - The transformation to apply to variables during the transition.
}

func (x *CatchError) Reset() {
	*x = CatchError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchError) ProtoMessage() {}

func (x *CatchError) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchError.ProtoReflect.Descriptor instead.
func (*CatchError) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{9}
}

func (x *CatchError) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CatchError) GetErrorId() string {
	if x != nil {
		return x.ErrorId
	}
	return ""
}

func (x *CatchError) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *CatchError) GetOutputTransform() map[string]string {
	if x != nil {
		return x.OutputTransform
	}
	return nil
}

// Targets defines a set of targets for transition and as to whether only the first match should be executed.
type Targets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target    []*Target `protobuf:"bytes,1,rep,name=target,proto3" json:"target,omitempty"`        // Target - the target for a state transition.
	Exclusive bool      `protobuf:"varint,2,opt,name=exclusive,proto3" json:"exclusive,omitempty"` // Exclusive - specifies that only the first match should be traversed.
}

func (x *Targets) Reset() {
	*x = Targets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Targets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Targets) ProtoMessage() {}

func (x *Targets) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Targets.ProtoReflect.Descriptor instead.
func (*Targets) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{10}
}

func (x *Targets) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Targets) GetExclusive() bool {
	if x != nil {
		return x.Exclusive
	}
	return false
}

// WorkflowState describes a current executing state inside a workflow state machine.
type WorkflowState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowId         string            `protobuf:"bytes,1,opt,name=workflowId,proto3" json:"workflowId,omitempty"`                 // WorkflowId - the ID of the workflow version that provides the template for execution.
	WorkflowInstanceId string            `protobuf:"bytes,2,opt,name=workflowInstanceId,proto3" json:"workflowInstanceId,omitempty"` // WorkflowInstanceId - the workflow instance that this state belongs to.
	ElementId          string            `protobuf:"bytes,3,opt,name=elementId,proto3" json:"elementId,omitempty"`                   // ElementId - the currently executing element withing the workflow state machine.
	ElementType        string            `protobuf:"bytes,4,opt,name=elementType,proto3" json:"elementType,omitempty"`               // ElementType - the currently executing element type, cached here to reduce lookups.
	Id                 []string          `protobuf:"bytes,5,rep,name=id,proto3" json:"id,omitempty"`                                 // Id - a stack of IDs that descibe the state and its parents up to the original workflow instance ID.
	Execute            *string           `protobuf:"bytes,7,opt,name=execute,proto3,oneof" json:"execute,omitempty"`                 // Execute - additional information required to execute depending on the element type.
	State              CancellationState `protobuf:"varint,8,opt,name=state,proto3,enum=CancellationState" json:"state,omitempty"`   // State - the current execution state of the state machine.
	Condition          *string           `protobuf:"bytes,9,opt,name=condition,proto3,oneof" json:"condition,omitempty"`             // Condition - a message condition that needs to be fulfilled before proceeding.
	UnixTimeNano       int64             `protobuf:"varint,10,opt,name=unixTimeNano,proto3" json:"unixTimeNano,omitempty"`           // UnixTimeNano - the time this state was observed.
	Vars               []byte            `protobuf:"bytes,11,opt,name=vars,proto3" json:"vars,omitempty"`                            // Vars - A go binary encoded map[string]interface{} of variables.
	Owners             []string          `protobuf:"bytes,12,rep,name=owners,proto3" json:"owners,omitempty"`                        // Owners - a list of user owners for this state that may be responsible for completing tasks
	Groups             []string          `protobuf:"bytes,13,rep,name=groups,proto3" json:"groups,omitempty"`                        // Groups - a list of user groups for this state that may be responsible for completing tasks
	Error              *Error            `protobuf:"bytes,14,opt,name=error,proto3" json:"error,omitempty"`                          // Error - an error being carried by the state if it has faulted.
	Timer              *WorkflowTimer    `protobuf:"bytes,16,opt,name=timer,proto3" json:"timer,omitempty"`                          // Timer - a time needed to transition to the next state.
	WorkflowName       string            `protobuf:"bytes,17,opt,name=workflowName,proto3" json:"workflowName,omitempty"`            // WorkflowName - name of this workflow to avoid lookups.
	ProcessName        string            `protobuf:"bytes,18,opt,name=processName,proto3" json:"processName,omitempty"`              // ProcessName - name of this process to avoid lookups.
	ProcessInstanceId  string            `protobuf:"bytes,19,opt,name=processInstanceId,proto3" json:"processInstanceId,omitempty"`  // ProcessInstanceId - the unique ID for the process instance.
}

func (x *WorkflowState) Reset() {
	*x = WorkflowState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowState) ProtoMessage() {}

func (x *WorkflowState) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowState.ProtoReflect.Descriptor instead.
func (*WorkflowState) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{11}
}

func (x *WorkflowState) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowState) GetWorkflowInstanceId() string {
	if x != nil {
		return x.WorkflowInstanceId
	}
	return ""
}

func (x *WorkflowState) GetElementId() string {
	if x != nil {
		return x.ElementId
	}
	return ""
}

func (x *WorkflowState) GetElementType() string {
	if x != nil {
		return x.ElementType
	}
	return ""
}

func (x *WorkflowState) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *WorkflowState) GetExecute() string {
	if x != nil && x.Execute != nil {
		return *x.Execute
	}
	return ""
}

func (x *WorkflowState) GetState() CancellationState {
	if x != nil {
		return x.State
	}
	return CancellationState_executing
}

func (x *WorkflowState) GetCondition() string {
	if x != nil && x.Condition != nil {
		return *x.Condition
	}
	return ""
}

func (x *WorkflowState) GetUnixTimeNano() int64 {
	if x != nil {
		return x.UnixTimeNano
	}
	return 0
}

func (x *WorkflowState) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

func (x *WorkflowState) GetOwners() []string {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *WorkflowState) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *WorkflowState) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WorkflowState) GetTimer() *WorkflowTimer {
	if x != nil {
		return x.Timer
	}
	return nil
}

func (x *WorkflowState) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *WorkflowState) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *WorkflowState) GetProcessInstanceId() string {
	if x != nil {
		return x.ProcessInstanceId
	}
	return ""
}

// WorkflowTimerDefinition defines a workflow timer that can be used to trigger an event.
type WorkflowTimerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       WorkflowTimerType `protobuf:"varint,1,opt,name=type,proto3,enum=WorkflowTimerType" json:"type,omitempty"` // Type - whether the workflow timer is relative or absolute.
	Value      int64             `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`                      // Value - the time parameter.
	Repeat     int64             `protobuf:"varint,3,opt,name=repeat,proto3" json:"repeat,omitempty"`                    // Repeat - the repeat interval for the timer.
	DropEvents bool              `protobuf:"varint,4,opt,name=dropEvents,proto3" json:"dropEvents,omitempty"`            // DropEvents - unused.
}

func (x *WorkflowTimerDefinition) Reset() {
	*x = WorkflowTimerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowTimerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTimerDefinition) ProtoMessage() {}

func (x *WorkflowTimerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTimerDefinition.ProtoReflect.Descriptor instead.
func (*WorkflowTimerDefinition) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{12}
}

func (x *WorkflowTimerDefinition) GetType() WorkflowTimerType {
	if x != nil {
		return x.Type
	}
	return WorkflowTimerType_duration
}

func (x *WorkflowTimerDefinition) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *WorkflowTimerDefinition) GetRepeat() int64 {
	if x != nil {
		return x.Repeat
	}
	return 0
}

func (x *WorkflowTimerDefinition) GetDropEvents() bool {
	if x != nil {
		return x.DropEvents
	}
	return false
}

// WorkflowTimer holds the last execution state of a timer.
type WorkflowTimer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastFired int64 `protobuf:"varint,1,opt,name=lastFired,proto3" json:"lastFired,omitempty"` // LastFired - the time in UNIX nanoseconds since the timer was last executed.
	Count     int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`         // Count - the number of times the timer has fired.
}

func (x *WorkflowTimer) Reset() {
	*x = WorkflowTimer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowTimer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTimer) ProtoMessage() {}

func (x *WorkflowTimer) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTimer.ProtoReflect.Descriptor instead.
func (*WorkflowTimer) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{13}
}

func (x *WorkflowTimer) GetLastFired() int64 {
	if x != nil {
		return x.LastFired
	}
	return 0
}

func (x *WorkflowTimer) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// WorkflowInstance contains all of the metadata for a currently running workflow instance.
type WorkflowInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowInstanceId      string          `protobuf:"bytes,1,opt,name=workflowInstanceId,proto3" json:"workflowInstanceId,omitempty"`                                                                                          // WorkflowInstanceId - the unique ID for the workflow instance.
	WorkflowId              string          `protobuf:"bytes,2,opt,name=workflowId,proto3" json:"workflowId,omitempty"`                                                                                                          // WorkflowId - the workflow version ID that this instance is executing.
	ParentProcessInstanceId *string         `protobuf:"bytes,3,opt,name=parentProcessInstanceId,proto3,oneof" json:"parentProcessInstanceId,omitempty"`                                                                          // ParentProcessInstanceId - the parent process instance that launched this process - if nil, the workflow instance launched the process instance.
	ParentElementId         *string         `protobuf:"bytes,4,opt,name=parentElementId,proto3,oneof" json:"parentElementId,omitempty"`                                                                                          // ParentElementId - the ID of the element in the parent process that triggered the launch of this process instance.
	WorkflowName            string          `protobuf:"bytes,5,opt,name=workflowName,proto3" json:"workflowName,omitempty"`                                                                                                      // WorkflowName - name of this workflow to avoid lookups.
	ProcessInstanceId       []string        `protobuf:"bytes,6,rep,name=processInstanceId,proto3" json:"processInstanceId,omitempty"`                                                                                            // ProcessInstance - process instances berlonging to this workflow instance.
	SatisfiedProcesses      map[string]bool `protobuf:"bytes,7,rep,name=satisfiedProcesses,proto3" json:"satisfiedProcesses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // SatisfiedProcesses - a list of event driven processes that have been completed.
}

func (x *WorkflowInstance) Reset() {
	*x = WorkflowInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInstance) ProtoMessage() {}

func (x *WorkflowInstance) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInstance.ProtoReflect.Descriptor instead.
func (*WorkflowInstance) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{14}
}

func (x *WorkflowInstance) GetWorkflowInstanceId() string {
	if x != nil {
		return x.WorkflowInstanceId
	}
	return ""
}

func (x *WorkflowInstance) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowInstance) GetParentProcessInstanceId() string {
	if x != nil && x.ParentProcessInstanceId != nil {
		return *x.ParentProcessInstanceId
	}
	return ""
}

func (x *WorkflowInstance) GetParentElementId() string {
	if x != nil && x.ParentElementId != nil {
		return *x.ParentElementId
	}
	return ""
}

func (x *WorkflowInstance) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *WorkflowInstance) GetProcessInstanceId() []string {
	if x != nil {
		return x.ProcessInstanceId
	}
	return nil
}

func (x *WorkflowInstance) GetSatisfiedProcesses() map[string]bool {
	if x != nil {
		return x.SatisfiedProcesses
	}
	return nil
}

type ProcessInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessInstanceId  string  `protobuf:"bytes,1,opt,name=processInstanceId,proto3" json:"processInstanceId,omitempty"`   // ProcessInstanceId - the unique ID for the process instance.
	WorkflowInstanceId string  `protobuf:"bytes,2,opt,name=workflowInstanceId,proto3" json:"workflowInstanceId,omitempty"` // WorkflowInstanceId - the workflow instance this process belongs to.
	ParentProcessId    *string `protobuf:"bytes,3,opt,name=parentProcessId,proto3,oneof" json:"parentProcessId,omitempty"` // ParentProcessInstanceId - the parent process instance that launched this process - if nil, the workflow instance launched the process instance.
	ParentElementId    *string `protobuf:"bytes,4,opt,name=parentElementId,proto3,oneof" json:"parentElementId,omitempty"` // ParentElementId - the ID of the element in the parent process that triggered the launch of this process instance.
	WorkflowId         string  `protobuf:"bytes,5,opt,name=workflowId,proto3" json:"workflowId,omitempty"`                 // WorkflowId - the workflow version ID that this instance is executing.
	WorkflowName       string  `protobuf:"bytes,6,opt,name=workflowName,proto3" json:"workflowName,omitempty"`             // WorkflowName - name of this workflow to avoid lookups.
	ProcessName        string  `protobuf:"bytes,7,opt,name=processName,proto3" json:"processName,omitempty"`               // ProcessName - name of this process to avoid lookups.
}

func (x *ProcessInstance) Reset() {
	*x = ProcessInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInstance) ProtoMessage() {}

func (x *ProcessInstance) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInstance.ProtoReflect.Descriptor instead.
func (*ProcessInstance) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{15}
}

func (x *ProcessInstance) GetProcessInstanceId() string {
	if x != nil {
		return x.ProcessInstanceId
	}
	return ""
}

func (x *ProcessInstance) GetWorkflowInstanceId() string {
	if x != nil {
		return x.WorkflowInstanceId
	}
	return ""
}

func (x *ProcessInstance) GetParentProcessId() string {
	if x != nil && x.ParentProcessId != nil {
		return *x.ParentProcessId
	}
	return ""
}

func (x *ProcessInstance) GetParentElementId() string {
	if x != nil && x.ParentElementId != nil {
		return *x.ParentElementId
	}
	return ""
}

func (x *ProcessInstance) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ProcessInstance) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *ProcessInstance) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

// MessageInstance represents a workflow message.
type MessageInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId      string `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`           // MessageId - the unique messageId for the message.
	CorrelationKey string `protobuf:"bytes,2,opt,name=correlationKey,proto3" json:"correlationKey,omitempty"` // CorrelationKey - a receiving key to correlate this message to.
	Vars           []byte `protobuf:"bytes,3,opt,name=vars,proto3" json:"vars,omitempty"`                     // Vars - A go binary encoded map[string]interface{} of variables.
}

func (x *MessageInstance) Reset() {
	*x = MessageInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInstance) ProtoMessage() {}

func (x *MessageInstance) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInstance.ProtoReflect.Descriptor instead.
func (*MessageInstance) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{16}
}

func (x *MessageInstance) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageInstance) GetCorrelationKey() string {
	if x != nil {
		return x.CorrelationKey
	}
	return ""
}

func (x *MessageInstance) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type WorkflowInstanceSubscribers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *WorkflowInstanceSubscribers) Reset() {
	*x = WorkflowInstanceSubscribers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInstanceSubscribers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInstanceSubscribers) ProtoMessage() {}

func (x *WorkflowInstanceSubscribers) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInstanceSubscribers.ProtoReflect.Descriptor instead.
func (*WorkflowInstanceSubscribers) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{17}
}

func (x *WorkflowInstanceSubscribers) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

type UserTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *UserTasks) Reset() {
	*x = UserTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTasks) ProtoMessage() {}

func (x *UserTasks) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTasks.ProtoReflect.Descriptor instead.
func (*UserTasks) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{18}
}

func (x *UserTasks) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type ApiAuthorizationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers      map[string]string `protobuf:"bytes,1,rep,name=Headers,proto3" json:"Headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Function     string            `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	WorkflowName string            `protobuf:"bytes,3,opt,name=workflowName,proto3" json:"workflowName,omitempty"`
	User         string            `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ApiAuthorizationRequest) Reset() {
	*x = ApiAuthorizationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAuthorizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAuthorizationRequest) ProtoMessage() {}

func (x *ApiAuthorizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAuthorizationRequest.ProtoReflect.Descriptor instead.
func (*ApiAuthorizationRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{19}
}

func (x *ApiAuthorizationRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ApiAuthorizationRequest) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *ApiAuthorizationRequest) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *ApiAuthorizationRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ApiAuthorizationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorized bool   `protobuf:"varint,1,opt,name=authorized,proto3" json:"authorized,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *ApiAuthorizationResponse) Reset() {
	*x = ApiAuthorizationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAuthorizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAuthorizationResponse) ProtoMessage() {}

func (x *ApiAuthorizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAuthorizationResponse.ProtoReflect.Descriptor instead.
func (*ApiAuthorizationResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{20}
}

func (x *ApiAuthorizationResponse) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *ApiAuthorizationResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ApiAuthenticationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers map[string]string `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ApiAuthenticationRequest) Reset() {
	*x = ApiAuthenticationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAuthenticationRequest) ProtoMessage() {}

func (x *ApiAuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAuthenticationRequest.ProtoReflect.Descriptor instead.
func (*ApiAuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{21}
}

func (x *ApiAuthenticationRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type ApiAuthenticationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Authenticated bool   `protobuf:"varint,2,opt,name=Authenticated,proto3" json:"Authenticated,omitempty"`
}

func (x *ApiAuthenticationResponse) Reset() {
	*x = ApiAuthenticationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAuthenticationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAuthenticationResponse) ProtoMessage() {}

func (x *ApiAuthenticationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAuthenticationResponse.ProtoReflect.Descriptor instead.
func (*ApiAuthenticationResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{22}
}

func (x *ApiAuthenticationResponse) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ApiAuthenticationResponse) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

type LaunchWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vars []byte `protobuf:"bytes,2,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *LaunchWorkflowRequest) Reset() {
	*x = LaunchWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchWorkflowRequest) ProtoMessage() {}

func (x *LaunchWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchWorkflowRequest.ProtoReflect.Descriptor instead.
func (*LaunchWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{23}
}

func (x *LaunchWorkflowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LaunchWorkflowRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type LaunchWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	WorkflowId string `protobuf:"bytes,2,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
}

func (x *LaunchWorkflowResponse) Reset() {
	*x = LaunchWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchWorkflowResponse) ProtoMessage() {}

func (x *LaunchWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchWorkflowResponse.ProtoReflect.Descriptor instead.
func (*LaunchWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{24}
}

func (x *LaunchWorkflowResponse) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *LaunchWorkflowResponse) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type CancelWorkflowInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State CancellationState `protobuf:"varint,2,opt,name=state,proto3,enum=CancellationState" json:"state,omitempty"`
	Error *Error            `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CancelWorkflowInstanceRequest) Reset() {
	*x = CancelWorkflowInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelWorkflowInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWorkflowInstanceRequest) ProtoMessage() {}

func (x *CancelWorkflowInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWorkflowInstanceRequest.ProtoReflect.Descriptor instead.
func (*CancelWorkflowInstanceRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{25}
}

func (x *CancelWorkflowInstanceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CancelWorkflowInstanceRequest) GetState() CancellationState {
	if x != nil {
		return x.State
	}
	return CancellationState_executing
}

func (x *CancelWorkflowInstanceRequest) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ListWorkflowInstanceProcessesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListWorkflowInstanceProcessesRequest) Reset() {
	*x = ListWorkflowInstanceProcessesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowInstanceProcessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowInstanceProcessesRequest) ProtoMessage() {}

func (x *ListWorkflowInstanceProcessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowInstanceProcessesRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowInstanceProcessesRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{26}
}

func (x *ListWorkflowInstanceProcessesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListWorkflowInstanceProcessesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessInstanceId []string `protobuf:"bytes,1,rep,name=processInstanceId,proto3" json:"processInstanceId,omitempty"` // ProcessInstance - process instances berlonging to this workflow instance.
}

func (x *ListWorkflowInstanceProcessesResult) Reset() {
	*x = ListWorkflowInstanceProcessesResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowInstanceProcessesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowInstanceProcessesResult) ProtoMessage() {}

func (x *ListWorkflowInstanceProcessesResult) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowInstanceProcessesResult.ProtoReflect.Descriptor instead.
func (*ListWorkflowInstanceProcessesResult) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{27}
}

func (x *ListWorkflowInstanceProcessesResult) GetProcessInstanceId() []string {
	if x != nil {
		return x.ProcessInstanceId
	}
	return nil
}

type GetProcessInstanceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProcessInstanceStatusRequest) Reset() {
	*x = GetProcessInstanceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessInstanceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessInstanceStatusRequest) ProtoMessage() {}

func (x *GetProcessInstanceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessInstanceStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProcessInstanceStatusRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{28}
}

func (x *GetProcessInstanceStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProcessInstanceStatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessState []*WorkflowState `protobuf:"bytes,1,rep,name=processState,proto3" json:"processState,omitempty"` // ProcessInstance - process instances berlonging to this workflow instance.
}

func (x *GetProcessInstanceStatusResult) Reset() {
	*x = GetProcessInstanceStatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessInstanceStatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessInstanceStatusResult) ProtoMessage() {}

func (x *GetProcessInstanceStatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessInstanceStatusResult.ProtoReflect.Descriptor instead.
func (*GetProcessInstanceStatusResult) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{29}
}

func (x *GetProcessInstanceStatusResult) GetProcessState() []*WorkflowState {
	if x != nil {
		return x.ProcessState
	}
	return nil
}

type ListWorkflowInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowName string `protobuf:"bytes,1,opt,name=workflowName,proto3" json:"workflowName,omitempty"`
}

func (x *ListWorkflowInstanceRequest) Reset() {
	*x = ListWorkflowInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowInstanceRequest) ProtoMessage() {}

func (x *ListWorkflowInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowInstanceRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowInstanceRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{30}
}

func (x *ListWorkflowInstanceRequest) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

type ListWorkflowInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ListWorkflowInstanceResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListWorkflowInstanceResponse) Reset() {
	*x = ListWorkflowInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowInstanceResponse) ProtoMessage() {}

func (x *ListWorkflowInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowInstanceResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowInstanceResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{31}
}

func (x *ListWorkflowInstanceResponse) GetResult() []*ListWorkflowInstanceResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListWorkflowInstanceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ListWorkflowInstanceResult) Reset() {
	*x = ListWorkflowInstanceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowInstanceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowInstanceResult) ProtoMessage() {}

func (x *ListWorkflowInstanceResult) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowInstanceResult.ProtoReflect.Descriptor instead.
func (*ListWorkflowInstanceResult) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{32}
}

func (x *ListWorkflowInstanceResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListWorkflowInstanceResult) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type WorkflowInstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkflowId string `protobuf:"bytes,2,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
}

func (x *WorkflowInstanceInfo) Reset() {
	*x = WorkflowInstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInstanceInfo) ProtoMessage() {}

func (x *WorkflowInstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInstanceInfo.ProtoReflect.Descriptor instead.
func (*WorkflowInstanceInfo) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{33}
}

func (x *WorkflowInstanceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowInstanceInfo) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type WorkflowInstanceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State []*WorkflowState `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
}

func (x *WorkflowInstanceStatus) Reset() {
	*x = WorkflowInstanceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInstanceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInstanceStatus) ProtoMessage() {}

func (x *WorkflowInstanceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInstanceStatus.ProtoReflect.Descriptor instead.
func (*WorkflowInstanceStatus) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{34}
}

func (x *WorkflowInstanceStatus) GetState() []*WorkflowState {
	if x != nil {
		return x.State
	}
	return nil
}

type ListWorkflowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ListWorkflowResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListWorkflowsResponse) Reset() {
	*x = ListWorkflowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsResponse) ProtoMessage() {}

func (x *ListWorkflowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkflowsResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{35}
}

func (x *ListWorkflowsResponse) GetResult() []*ListWorkflowResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListWorkflowResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ListWorkflowResult) Reset() {
	*x = ListWorkflowResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowResult) ProtoMessage() {}

func (x *ListWorkflowResult) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowResult.ProtoReflect.Descriptor instead.
func (*ListWorkflowResult) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{36}
}

func (x *ListWorkflowResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListWorkflowResult) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	WorkflowInstanceId string `protobuf:"bytes,3,opt,name=workflowInstanceId,proto3" json:"workflowInstanceId,omitempty"`
	Vars               []byte `protobuf:"bytes,4,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{37}
}

func (x *SendMessageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendMessageRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SendMessageRequest) GetWorkflowInstanceId() string {
	if x != nil {
		return x.WorkflowInstanceId
	}
	return ""
}

func (x *SendMessageRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type WorkflowInstanceComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowName       string            `protobuf:"bytes,1,opt,name=workflowName,proto3" json:"workflowName,omitempty"`
	WorkflowId         string            `protobuf:"bytes,2,opt,name=workflowId,proto3" json:"workflowId,omitempty"`
	WorkflowInstanceId string            `protobuf:"bytes,3,opt,name=workflowInstanceId,proto3" json:"workflowInstanceId,omitempty"`
	WorkflowState      CancellationState `protobuf:"varint,4,opt,name=workflowState,proto3,enum=CancellationState" json:"workflowState,omitempty"`
	Error              *Error            `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WorkflowInstanceComplete) Reset() {
	*x = WorkflowInstanceComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInstanceComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInstanceComplete) ProtoMessage() {}

func (x *WorkflowInstanceComplete) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInstanceComplete.ProtoReflect.Descriptor instead.
func (*WorkflowInstanceComplete) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{38}
}

func (x *WorkflowInstanceComplete) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *WorkflowInstanceComplete) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *WorkflowInstanceComplete) GetWorkflowInstanceId() string {
	if x != nil {
		return x.WorkflowInstanceId
	}
	return ""
}

func (x *WorkflowInstanceComplete) GetWorkflowState() CancellationState {
	if x != nil {
		return x.WorkflowState
	}
	return CancellationState_executing
}

func (x *WorkflowInstanceComplete) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CompleteManualTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Vars       []byte `protobuf:"bytes,2,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *CompleteManualTaskRequest) Reset() {
	*x = CompleteManualTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteManualTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteManualTaskRequest) ProtoMessage() {}

func (x *CompleteManualTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteManualTaskRequest.ProtoReflect.Descriptor instead.
func (*CompleteManualTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{39}
}

func (x *CompleteManualTaskRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *CompleteManualTaskRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type CompleteServiceTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Vars       []byte `protobuf:"bytes,2,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *CompleteServiceTaskRequest) Reset() {
	*x = CompleteServiceTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteServiceTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteServiceTaskRequest) ProtoMessage() {}

func (x *CompleteServiceTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteServiceTaskRequest.ProtoReflect.Descriptor instead.
func (*CompleteServiceTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{40}
}

func (x *CompleteServiceTaskRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *CompleteServiceTaskRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type CompleteSendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Vars       []byte `protobuf:"bytes,2,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *CompleteSendMessageRequest) Reset() {
	*x = CompleteSendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteSendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteSendMessageRequest) ProtoMessage() {}

func (x *CompleteSendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteSendMessageRequest.ProtoReflect.Descriptor instead.
func (*CompleteSendMessageRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{41}
}

func (x *CompleteSendMessageRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *CompleteSendMessageRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type CompleteUserTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Owner      string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Vars       []byte `protobuf:"bytes,3,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *CompleteUserTaskRequest) Reset() {
	*x = CompleteUserTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUserTaskRequest) ProtoMessage() {}

func (x *CompleteUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUserTaskRequest.ProtoReflect.Descriptor instead.
func (*CompleteUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{42}
}

func (x *CompleteUserTaskRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *CompleteUserTaskRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CompleteUserTaskRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type ListUserTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *ListUserTasksRequest) Reset() {
	*x = ListUserTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTasksRequest) ProtoMessage() {}

func (x *ListUserTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTasksRequest.ProtoReflect.Descriptor instead.
func (*ListUserTasksRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{43}
}

func (x *ListUserTasksRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type GetUserTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner      string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	TrackingId string `protobuf:"bytes,2,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
}

func (x *GetUserTaskRequest) Reset() {
	*x = GetUserTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTaskRequest) ProtoMessage() {}

func (x *GetUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTaskRequest.ProtoReflect.Descriptor instead.
func (*GetUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{44}
}

func (x *GetUserTaskRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetUserTaskRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

type GetMessageSenderRoutingIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowName string `protobuf:"bytes,1,opt,name=workflowName,proto3" json:"workflowName,omitempty"`
	MessageName  string `protobuf:"bytes,2,opt,name=messageName,proto3" json:"messageName,omitempty"`
}

func (x *GetMessageSenderRoutingIdRequest) Reset() {
	*x = GetMessageSenderRoutingIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageSenderRoutingIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageSenderRoutingIdRequest) ProtoMessage() {}

func (x *GetMessageSenderRoutingIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageSenderRoutingIdRequest.ProtoReflect.Descriptor instead.
func (*GetMessageSenderRoutingIdRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{45}
}

func (x *GetMessageSenderRoutingIdRequest) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *GetMessageSenderRoutingIdRequest) GetMessageName() string {
	if x != nil {
		return x.MessageName
	}
	return ""
}

type GetUserTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId  string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	Owner       string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Vars        []byte `protobuf:"bytes,5,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *GetUserTaskResponse) Reset() {
	*x = GetUserTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTaskResponse) ProtoMessage() {}

func (x *GetUserTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTaskResponse.ProtoReflect.Descriptor instead.
func (*GetUserTaskResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{46}
}

func (x *GetUserTaskResponse) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *GetUserTaskResponse) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetUserTaskResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetUserTaskResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserTaskResponse) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type HandleWorkflowErrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingId string `protobuf:"bytes,1,opt,name=trackingId,proto3" json:"trackingId,omitempty"`
	ErrorCode  string `protobuf:"bytes,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Vars       []byte `protobuf:"bytes,4,opt,name=vars,proto3" json:"vars,omitempty"`
}

func (x *HandleWorkflowErrorRequest) Reset() {
	*x = HandleWorkflowErrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWorkflowErrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWorkflowErrorRequest) ProtoMessage() {}

func (x *HandleWorkflowErrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWorkflowErrorRequest.ProtoReflect.Descriptor instead.
func (*HandleWorkflowErrorRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{47}
}

func (x *HandleWorkflowErrorRequest) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *HandleWorkflowErrorRequest) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *HandleWorkflowErrorRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HandleWorkflowErrorRequest) GetVars() []byte {
	if x != nil {
		return x.Vars
	}
	return nil
}

type HandleWorkflowErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handled bool `protobuf:"varint,1,opt,name=handled,proto3" json:"handled,omitempty"`
}

func (x *HandleWorkflowErrorResponse) Reset() {
	*x = HandleWorkflowErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWorkflowErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWorkflowErrorResponse) ProtoMessage() {}

func (x *HandleWorkflowErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWorkflowErrorResponse.ProtoReflect.Descriptor instead.
func (*HandleWorkflowErrorResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{48}
}

func (x *HandleWorkflowErrorResponse) GetHandled() bool {
	if x != nil {
		return x.Handled
	}
	return false
}

type GetWorkflowVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWorkflowVersionsRequest) Reset() {
	*x = GetWorkflowVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowVersionsRequest) ProtoMessage() {}

func (x *GetWorkflowVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowVersionsRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowVersionsRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{49}
}

func (x *GetWorkflowVersionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetWorkflowVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions *WorkflowVersions `protobuf:"bytes,1,opt,name=versions,proto3" json:"versions,omitempty"`
}

func (x *GetWorkflowVersionsResponse) Reset() {
	*x = GetWorkflowVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowVersionsResponse) ProtoMessage() {}

func (x *GetWorkflowVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowVersionsResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowVersionsResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{50}
}

func (x *GetWorkflowVersionsResponse) GetVersions() *WorkflowVersions {
	if x != nil {
		return x.Versions
	}
	return nil
}

type GetWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetWorkflowRequest) Reset() {
	*x = GetWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowRequest) ProtoMessage() {}

func (x *GetWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{51}
}

func (x *GetWorkflowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definition *Workflow `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *GetWorkflowResponse) Reset() {
	*x = GetWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowResponse) ProtoMessage() {}

func (x *GetWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{52}
}

func (x *GetWorkflowResponse) GetDefinition() *Workflow {
	if x != nil {
		return x.Definition
	}
	return nil
}

type WorkflowStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflows         int64 `protobuf:"varint,1,opt,name=Workflows,proto3" json:"Workflows,omitempty"`
	InstancesStarted  int64 `protobuf:"varint,2,opt,name=InstancesStarted,proto3" json:"InstancesStarted,omitempty"`
	InstancesComplete int64 `protobuf:"varint,3,opt,name=InstancesComplete,proto3" json:"InstancesComplete,omitempty"`
}

func (x *WorkflowStats) Reset() {
	*x = WorkflowStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowStats) ProtoMessage() {}

func (x *WorkflowStats) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowStats.ProtoReflect.Descriptor instead.
func (*WorkflowStats) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{53}
}

func (x *WorkflowStats) GetWorkflows() int64 {
	if x != nil {
		return x.Workflows
	}
	return 0
}

func (x *WorkflowStats) GetInstancesStarted() int64 {
	if x != nil {
		return x.InstancesStarted
	}
	return 0
}

func (x *WorkflowStats) GetInstancesComplete() int64 {
	if x != nil {
		return x.InstancesComplete
	}
	return 0
}

type TelemetryState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *WorkflowState               `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Log   map[int64]*TelemetryLogEntry `protobuf:"bytes,2,rep,name=log,proto3" json:"log,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TelemetryState) Reset() {
	*x = TelemetryState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryState) ProtoMessage() {}

func (x *TelemetryState) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryState.ProtoReflect.Descriptor instead.
func (*TelemetryState) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{54}
}

func (x *TelemetryState) GetState() *WorkflowState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *TelemetryState) GetLog() map[int64]*TelemetryLogEntry {
	if x != nil {
		return x.Log
	}
	return nil
}

type TelemetryLogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackingID string            `protobuf:"bytes,1,opt,name=trackingID,proto3" json:"trackingID,omitempty"`
	Source     LogSource         `protobuf:"varint,2,opt,name=source,proto3,enum=LogSource" json:"source,omitempty"`
	Message    string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Code       int32             `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Attributes map[string]string `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TelemetryLogEntry) Reset() {
	*x = TelemetryLogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shar_workflow_models_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryLogEntry) ProtoMessage() {}

func (x *TelemetryLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_shar_workflow_models_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryLogEntry.ProtoReflect.Descriptor instead.
func (*TelemetryLogEntry) Descriptor() ([]byte, []int) {
	return file_shar_workflow_models_proto_rawDescGZIP(), []int{55}
}

func (x *TelemetryLogEntry) GetTrackingID() string {
	if x != nil {
		return x.TrackingID
	}
	return ""
}

func (x *TelemetryLogEntry) GetSource() LogSource {
	if x != nil {
		return x.Source
	}
	return LogSource_logSourceEngine
}

func (x *TelemetryLogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TelemetryLogEntry) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TelemetryLogEntry) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

var File_shar_workflow_models_proto protoreflect.FileDescriptor

var file_shar_workflow_models_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x68, 0x61, 0x72, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01, 0x0a,
	0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x24, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x7a, 0x69, 0x70, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x67, 0x7a, 0x69, 0x70, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x44, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2a, 0x0a, 0x08, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x7c, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xf8, 0x05, 0x0a, 0x07, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x08,
	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x44, 0x0a, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x47, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2e,
	0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x0d, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x0d, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x1a, 0x41, 0x0a, 0x13,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x42, 0x0a, 0x14, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xd6, 0x01, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x45, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x42, 0x0a, 0x14, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50, 0x0a, 0x06,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x3f,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0xde, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x4a, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x61, 0x74, 0x63,
	0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x42, 0x0a, 0x14,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x48, 0x0a, 0x07, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x22, 0xd5, 0x04, 0x0a, 0x0d, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x07,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x78,
	0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x75, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x61, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24,
	0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x43, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf4, 0x03, 0x0a, 0x10, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x3d,
	0x0a, 0x17, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x17, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a,
	0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0c,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x59,
	0x0a, 0x12, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x61,
	0x74, 0x69, 0x73, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x69, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x45, 0x0a, 0x17, 0x53, 0x61, 0x74,
	0x69, 0x73, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xdb, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6b,
	0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x31, 0x0a, 0x1b, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x1b,
	0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x17,
	0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x41, 0x70, 0x69, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x3a, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x52, 0x0a, 0x18, 0x41, 0x70, 0x69, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a,
	0x18, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x41, 0x70, 0x69,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55, 0x0a, 0x19, 0x41, 0x70, 0x69, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x3f,
	0x0a, 0x15, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76,
	0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22,
	0x58, 0x0a, 0x16, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x1d, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x36, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x23, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x54, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x1c, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x46, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x22, 0x3e, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x44, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x12, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x18, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x4f, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x76, 0x61, 0x72, 0x73, 0x22, 0x50, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x50, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x63, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x2c, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x76, 0x61, 0x72, 0x73, 0x22, 0x37, 0x0a, 0x1b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x22, 0x30, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x4c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x24, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22,
	0xae, 0x01, 0x0a, 0x0e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x03, 0x6c, 0x6f, 0x67, 0x1a, 0x4a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x4c, 0x6f, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x88, 0x02, 0x0a, 0x11, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x4c, 0x6f,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x2c, 0x0a, 0x11, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x10, 0x01, 0x2a, 0x5c, 0x0a, 0x11, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x6f, 0x62, 0x73,
	0x6f, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x04, 0x2a, 0x5e, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x6c, 0x6f, 0x67,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x10, 0x02,
	0x12, 0x13, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4a, 0x6f, 0x62, 0x10, 0x04, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shar_workflow_models_proto_rawDescOnce sync.Once
	file_shar_workflow_models_proto_rawDescData = file_shar_workflow_models_proto_rawDesc
)

func file_shar_workflow_models_proto_rawDescGZIP() []byte {
	file_shar_workflow_models_proto_rawDescOnce.Do(func() {
		file_shar_workflow_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_shar_workflow_models_proto_rawDescData)
	})
	return file_shar_workflow_models_proto_rawDescData
}

var file_shar_workflow_models_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_shar_workflow_models_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_shar_workflow_models_proto_goTypes = []interface{}{
	(WorkflowTimerType)(0),                       // 0: WorkflowTimerType
	(CancellationState)(0),                       // 1: CancellationState
	(LogSource)(0),                               // 2: LogSource
	(*Workflow)(nil),                             // 3: Workflow
	(*Metadata)(nil),                             // 4: Metadata
	(*Process)(nil),                              // 5: Process
	(*WorkflowVersions)(nil),                     // 6: WorkflowVersions
	(*WorkflowVersion)(nil),                      // 7: WorkflowVersion
	(*Element)(nil),                              // 8: Element
	(*Timer)(nil),                                // 9: Timer
	(*Target)(nil),                               // 10: Target
	(*Error)(nil),                                // 11: Error
	(*CatchError)(nil),                           // 12: CatchError
	(*Targets)(nil),                              // 13: Targets
	(*WorkflowState)(nil),                        // 14: WorkflowState
	(*WorkflowTimerDefinition)(nil),              // 15: WorkflowTimerDefinition
	(*WorkflowTimer)(nil),                        // 16: WorkflowTimer
	(*WorkflowInstance)(nil),                     // 17: WorkflowInstance
	(*ProcessInstance)(nil),                      // 18: ProcessInstance
	(*MessageInstance)(nil),                      // 19: MessageInstance
	(*WorkflowInstanceSubscribers)(nil),          // 20: WorkflowInstanceSubscribers
	(*UserTasks)(nil),                            // 21: UserTasks
	(*ApiAuthorizationRequest)(nil),              // 22: ApiAuthorizationRequest
	(*ApiAuthorizationResponse)(nil),             // 23: ApiAuthorizationResponse
	(*ApiAuthenticationRequest)(nil),             // 24: ApiAuthenticationRequest
	(*ApiAuthenticationResponse)(nil),            // 25: ApiAuthenticationResponse
	(*LaunchWorkflowRequest)(nil),                // 26: LaunchWorkflowRequest
	(*LaunchWorkflowResponse)(nil),               // 27: LaunchWorkflowResponse
	(*CancelWorkflowInstanceRequest)(nil),        // 28: CancelWorkflowInstanceRequest
	(*ListWorkflowInstanceProcessesRequest)(nil), // 29: ListWorkflowInstanceProcessesRequest
	(*ListWorkflowInstanceProcessesResult)(nil),  // 30: ListWorkflowInstanceProcessesResult
	(*GetProcessInstanceStatusRequest)(nil),      // 31: GetProcessInstanceStatusRequest
	(*GetProcessInstanceStatusResult)(nil),       // 32: GetProcessInstanceStatusResult
	(*ListWorkflowInstanceRequest)(nil),          // 33: ListWorkflowInstanceRequest
	(*ListWorkflowInstanceResponse)(nil),         // 34: ListWorkflowInstanceResponse
	(*ListWorkflowInstanceResult)(nil),           // 35: ListWorkflowInstanceResult
	(*WorkflowInstanceInfo)(nil),                 // 36: WorkflowInstanceInfo
	(*WorkflowInstanceStatus)(nil),               // 37: WorkflowInstanceStatus
	(*ListWorkflowsResponse)(nil),                // 38: ListWorkflowsResponse
	(*ListWorkflowResult)(nil),                   // 39: ListWorkflowResult
	(*SendMessageRequest)(nil),                   // 40: SendMessageRequest
	(*WorkflowInstanceComplete)(nil),             // 41: WorkflowInstanceComplete
	(*CompleteManualTaskRequest)(nil),            // 42: CompleteManualTaskRequest
	(*CompleteServiceTaskRequest)(nil),           // 43: CompleteServiceTaskRequest
	(*CompleteSendMessageRequest)(nil),           // 44: CompleteSendMessageRequest
	(*CompleteUserTaskRequest)(nil),              // 45: CompleteUserTaskRequest
	(*ListUserTasksRequest)(nil),                 // 46: ListUserTasksRequest
	(*GetUserTaskRequest)(nil),                   // 47: GetUserTaskRequest
	(*GetMessageSenderRoutingIdRequest)(nil),     // 48: GetMessageSenderRoutingIdRequest
	(*GetUserTaskResponse)(nil),                  // 49: GetUserTaskResponse
	(*HandleWorkflowErrorRequest)(nil),           // 50: HandleWorkflowErrorRequest
	(*HandleWorkflowErrorResponse)(nil),          // 51: HandleWorkflowErrorResponse
	(*GetWorkflowVersionsRequest)(nil),           // 52: GetWorkflowVersionsRequest
	(*GetWorkflowVersionsResponse)(nil),          // 53: GetWorkflowVersionsResponse
	(*GetWorkflowRequest)(nil),                   // 54: GetWorkflowRequest
	(*GetWorkflowResponse)(nil),                  // 55: GetWorkflowResponse
	(*WorkflowStats)(nil),                        // 56: WorkflowStats
	(*TelemetryState)(nil),                       // 57: TelemetryState
	(*TelemetryLogEntry)(nil),                    // 58: TelemetryLogEntry
	nil,                                          // 59: Workflow.ProcessEntry
	nil,                                          // 60: Element.InputTransformEntry
	nil,                                          // 61: Element.OutputTransformEntry
	nil,                                          // 62: Timer.OutputTransformEntry
	nil,                                          // 63: CatchError.OutputTransformEntry
	nil,                                          // 64: WorkflowInstance.SatisfiedProcessesEntry
	nil,                                          // 65: ApiAuthorizationRequest.HeadersEntry
	nil,                                          // 66: ApiAuthenticationRequest.HeadersEntry
	nil,                                          // 67: TelemetryState.LogEntry
	nil,                                          // 68: TelemetryLogEntry.AttributesEntry
}
var file_shar_workflow_models_proto_depIdxs = []int32{
	59, // 0: Workflow.process:type_name -> Workflow.ProcessEntry
	8,  // 1: Workflow.messages:type_name -> Element
	11, // 2: Workflow.errors:type_name -> Error
	8,  // 3: Process.elements:type_name -> Element
	4,  // 4: Process.metadata:type_name -> Metadata
	7,  // 5: WorkflowVersions.version:type_name -> WorkflowVersion
	13, // 6: Element.outbound:type_name -> Targets
	5,  // 7: Element.process:type_name -> Process
	12, // 8: Element.errors:type_name -> CatchError
	11, // 9: Element.error:type_name -> Error
	60, // 10: Element.inputTransform:type_name -> Element.InputTransformEntry
	61, // 11: Element.outputTransform:type_name -> Element.OutputTransformEntry
	15, // 12: Element.timer:type_name -> WorkflowTimerDefinition
	9,  // 13: Element.boundaryTimer:type_name -> Timer
	62, // 14: Timer.outputTransform:type_name -> Timer.OutputTransformEntry
	63, // 15: CatchError.outputTransform:type_name -> CatchError.OutputTransformEntry
	10, // 16: Targets.target:type_name -> Target
	1,  // 17: WorkflowState.state:type_name -> CancellationState
	11, // 18: WorkflowState.error:type_name -> Error
	16, // 19: WorkflowState.timer:type_name -> WorkflowTimer
	0,  // 20: WorkflowTimerDefinition.type:type_name -> WorkflowTimerType
	64, // 21: WorkflowInstance.satisfiedProcesses:type_name -> WorkflowInstance.SatisfiedProcessesEntry
	65, // 22: ApiAuthorizationRequest.Headers:type_name -> ApiAuthorizationRequest.HeadersEntry
	66, // 23: ApiAuthenticationRequest.headers:type_name -> ApiAuthenticationRequest.HeadersEntry
	1,  // 24: CancelWorkflowInstanceRequest.state:type_name -> CancellationState
	11, // 25: CancelWorkflowInstanceRequest.error:type_name -> Error
	14, // 26: GetProcessInstanceStatusResult.processState:type_name -> WorkflowState
	35, // 27: ListWorkflowInstanceResponse.result:type_name -> ListWorkflowInstanceResult
	14, // 28: WorkflowInstanceStatus.state:type_name -> WorkflowState
	39, // 29: ListWorkflowsResponse.result:type_name -> ListWorkflowResult
	1,  // 30: WorkflowInstanceComplete.workflowState:type_name -> CancellationState
	11, // 31: WorkflowInstanceComplete.error:type_name -> Error
	6,  // 32: GetWorkflowVersionsResponse.versions:type_name -> WorkflowVersions
	3,  // 33: GetWorkflowResponse.definition:type_name -> Workflow
	14, // 34: TelemetryState.state:type_name -> WorkflowState
	67, // 35: TelemetryState.log:type_name -> TelemetryState.LogEntry
	2,  // 36: TelemetryLogEntry.source:type_name -> LogSource
	68, // 37: TelemetryLogEntry.attributes:type_name -> TelemetryLogEntry.AttributesEntry
	5,  // 38: Workflow.ProcessEntry.value:type_name -> Process
	58, // 39: TelemetryState.LogEntry.value:type_name -> TelemetryLogEntry
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_shar_workflow_models_proto_init() }
func file_shar_workflow_models_proto_init() {
	if File_shar_workflow_models_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shar_workflow_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workflow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatchError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Targets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowTimerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowTimer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInstanceSubscribers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAuthorizationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAuthorizationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAuthenticationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAuthenticationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelWorkflowInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowInstanceProcessesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowInstanceProcessesResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessInstanceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProcessInstanceStatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowInstanceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInstanceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkflowResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInstanceComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteManualTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteServiceTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteSendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteUserTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageSenderRoutingIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWorkflowErrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWorkflowErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shar_workflow_models_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryLogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_shar_workflow_models_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_shar_workflow_models_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shar_workflow_models_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shar_workflow_models_proto_goTypes,
		DependencyIndexes: file_shar_workflow_models_proto_depIdxs,
		EnumInfos:         file_shar_workflow_models_proto_enumTypes,
		MessageInfos:      file_shar_workflow_models_proto_msgTypes,
	}.Build()
	File_shar_workflow_models_proto = out.File
	file_shar_workflow_models_proto_rawDesc = nil
	file_shar_workflow_models_proto_goTypes = nil
	file_shar_workflow_models_proto_depIdxs = nil
}
